{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useCurrentUser } from \"../context/CurrentUserContext\";\n\n// Custom hook to redirect users based on their authentication status\nexport function useRedirect(redirectOnAuth) {\n  _s();\n  const currentUser = useCurrentUser(); // Get the current user from context\n  const navigate = useNavigate(); // Get the navigate function to handle navigation\n\n  useEffect(() => {\n    // Redirect logic based on user authentication status\n    if (redirectOnAuth === \"loggedIn\" && currentUser) {\n      navigate(\"/\"); // If the user is logged in, redirect to the home page\n    } else if (redirectOnAuth === \"loggedOut\" && !currentUser) {\n      navigate(\"/signin\"); // If the user is logged out, redirect to the sign-in page\n    }\n  }, [currentUser, redirectOnAuth, navigate]); // Dependency array ensures this effect runs when these values change\n}\n_s(useRedirect, \"9PkapFewl3lw+fqTyyMEcws+TlA=\", false, function () {\n  return [useCurrentUser, useNavigate];\n});","map":{"version":3,"names":["useEffect","useNavigate","useCurrentUser","useRedirect","redirectOnAuth","_s","currentUser","navigate"],"sources":["C:/Users/marko/Desktop/VS CODE/django-rest-api/frontend/src/hooks/useRedirect.js"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useCurrentUser } from \"../context/CurrentUserContext\";\r\n\r\n// Custom hook to redirect users based on their authentication status\r\nexport function useRedirect(redirectOnAuth) {\r\n  const currentUser = useCurrentUser();  // Get the current user from context\r\n  const navigate = useNavigate();  // Get the navigate function to handle navigation\r\n\r\n  useEffect(() => {\r\n    // Redirect logic based on user authentication status\r\n    if (redirectOnAuth === \"loggedIn\" && currentUser) {\r\n      navigate(\"/\");  // If the user is logged in, redirect to the home page\r\n    } else if (redirectOnAuth === \"loggedOut\" && !currentUser) {\r\n      navigate(\"/signin\");  // If the user is logged out, redirect to the sign-in page\r\n    }\r\n  }, [currentUser, redirectOnAuth, navigate]);  // Dependency array ensures this effect runs when these values change\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,cAAc,QAAQ,+BAA+B;;AAE9D;AACA,OAAO,SAASC,WAAWA,CAACC,cAAc,EAAE;EAAAC,EAAA;EAC1C,MAAMC,WAAW,GAAGJ,cAAc,CAAC,CAAC,CAAC,CAAE;EACvC,MAAMK,QAAQ,GAAGN,WAAW,CAAC,CAAC,CAAC,CAAE;;EAEjCD,SAAS,CAAC,MAAM;IACd;IACA,IAAII,cAAc,KAAK,UAAU,IAAIE,WAAW,EAAE;MAChDC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAE;IAClB,CAAC,MAAM,IAAIH,cAAc,KAAK,WAAW,IAAI,CAACE,WAAW,EAAE;MACzDC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAE;IACxB;EACF,CAAC,EAAE,CAACD,WAAW,EAAEF,cAAc,EAAEG,QAAQ,CAAC,CAAC,CAAC,CAAE;AAChD;AAACF,EAAA,CAZeF,WAAW;EAAA,QACLD,cAAc,EACjBD,WAAW;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}