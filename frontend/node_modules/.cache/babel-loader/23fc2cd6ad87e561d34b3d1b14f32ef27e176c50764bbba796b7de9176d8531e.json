{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { useCurrentUser } from \"../context/CurrentUserContext\";\nexport function useRedirect(redirectOnAuth) {\n  _s();\n  const currentUser = useCurrentUser();\n  const history = useHistory();\n  useEffect(() => {\n    if (redirectOnAuth === \"loggedIn\" && currentUser) {\n      history.push(\"/\");\n    } else if (redirectOnAuth === \"loggedOut\" && !currentUser) {\n      history.push(\"/signin\");\n    }\n  }, [currentUser, redirectOnAuth, history]);\n}\n_s(useRedirect, \"5F8e8u+AAw9eAtAmgUp1YccLlRc=\", false, function () {\n  return [useCurrentUser, useHistory];\n});","map":{"version":3,"names":["useEffect","useHistory","useCurrentUser","useRedirect","redirectOnAuth","_s","currentUser","history","push"],"sources":["C:/Users/marko/Desktop/VS CODE/django-rest-api/frontend/src/hooks/useRedirect.js"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useCurrentUser } from \"../context/CurrentUserContext\";\r\n\r\nexport function useRedirect(redirectOnAuth) {\r\n  const currentUser = useCurrentUser();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (redirectOnAuth === \"loggedIn\" && currentUser) {\r\n      history.push(\"/\");\r\n    } else if (redirectOnAuth === \"loggedOut\" && !currentUser) {\r\n      history.push(\"/signin\");\r\n    }\r\n  }, [currentUser, redirectOnAuth, history]);\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,cAAc,QAAQ,+BAA+B;AAE9D,OAAO,SAASC,WAAWA,CAACC,cAAc,EAAE;EAAAC,EAAA;EAC1C,MAAMC,WAAW,GAAGJ,cAAc,CAAC,CAAC;EACpC,MAAMK,OAAO,GAAGN,UAAU,CAAC,CAAC;EAE5BD,SAAS,CAAC,MAAM;IACd,IAAII,cAAc,KAAK,UAAU,IAAIE,WAAW,EAAE;MAChDC,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;IACnB,CAAC,MAAM,IAAIJ,cAAc,KAAK,WAAW,IAAI,CAACE,WAAW,EAAE;MACzDC,OAAO,CAACC,IAAI,CAAC,SAAS,CAAC;IACzB;EACF,CAAC,EAAE,CAACF,WAAW,EAAEF,cAAc,EAAEG,OAAO,CAAC,CAAC;AAC5C;AAACF,EAAA,CAXeF,WAAW;EAAA,QACLD,cAAc,EAClBD,UAAU;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}