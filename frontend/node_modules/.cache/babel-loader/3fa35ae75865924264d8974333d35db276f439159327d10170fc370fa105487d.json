{"ast":null,"code":"import React,{useState}from'react';import axios from'axios';import heartNotLiked from'../assets/househeart-not-liked.png';import heartLiked from'../assets/househeart-liked.png';import styles from'../styles/HouseHeart.module.css';// Importing necessary assets and styles\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const HouseHearts=_ref=>{var _JSON$parse,_document$cookie$spli;let{postId,currentHeartCount}=_ref;// State variables to manage the like status, heart count, and alert messages\nconst[isLiked,setIsLiked]=useState(false);const[heartsCount,setHeartsCount]=useState(currentHeartCount);const[alertMessage,setAlertMessage]=useState('');const[alertType,setAlertType]=useState('');// Retrieve user and authentication details from local storage and cookies\nconst loggedInUser=(_JSON$parse=JSON.parse(localStorage.getItem('user')))===null||_JSON$parse===void 0?void 0:_JSON$parse.username;const token=localStorage.getItem('token');const csrfToken=(_document$cookie$spli=document.cookie.split('; ').find(row=>row.startsWith('csrftoken=')))===null||_document$cookie$spli===void 0?void 0:_document$cookie$spli.split('=')[1];// Function to handle the like button click, sends a POST request to the server\nconst handleLike=()=>{if(isLiked){setAlertMessage(\"You have either househearted your own post or househearted a post twice, which cannot be done.\");setAlertType('error');showTemporaryAlert(4000);// Display error message for 4 seconds\nreturn;}axios.post('http://127.0.0.1:8000/househearts/',{housepost:postId,user:loggedInUser},{headers:{'Authorization':`Token ${token}`,'X-CSRFToken':csrfToken,'Content-Type':'application/json'}}).then(response=>{// Update state to reflect successful like and show success message\nsetIsLiked(true);setHeartsCount(heartsCount+1);setAlertMessage(\"You have HouseHearted this post.\");setAlertType('success');showTemporaryAlert(3000);// Display success message for 3 seconds\n}).catch(error=>{// Handle different types of errors and display appropriate messages\nif(error.response&&error.response.status===400){setAlertMessage(\"You have either househearted your own post or househearted a post twice, which cannot be done.\");setAlertType('error');}else if(error.response&&error.response.status===401){setAlertMessage(\"You are not authorized to like this post. Please log in.\");setAlertType('error');}else{setAlertMessage('Error liking the post.');setAlertType('error');}showTemporaryAlert(3000);// Display error message for 3 seconds\n});};// Function to show alert messages temporarily\nconst showTemporaryAlert=duration=>{setTimeout(()=>{setAlertMessage('');},duration);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"button\",{className:\"btn btn-link p-0 d-flex align-items-center\",type:\"button\",onClick:handleLike,style:{textDecoration:'none'},children:[/*#__PURE__*/_jsx(\"img\",{src:isLiked?heartLiked:heartNotLiked,alt:\"Like Button\",style:{width:'28.8px',height:'28.8px'}}),/*#__PURE__*/_jsxs(\"span\",{style:{marginLeft:'5px',color:'black',fontWeight:'bold'},children:[\"(\",heartsCount,\")\"]})]}),alertMessage&&/*#__PURE__*/_jsx(\"div\",{className:`${styles.alert} ${alertType==='success'?styles['alert-success']:styles['alert-error']}`,children:alertMessage})]});};export default HouseHearts;","map":{"version":3,"names":["React","useState","axios","heartNotLiked","heartLiked","styles","jsx","_jsx","jsxs","_jsxs","HouseHearts","_ref","_JSON$parse","_document$cookie$spli","postId","currentHeartCount","isLiked","setIsLiked","heartsCount","setHeartsCount","alertMessage","setAlertMessage","alertType","setAlertType","loggedInUser","JSON","parse","localStorage","getItem","username","token","csrfToken","document","cookie","split","find","row","startsWith","handleLike","showTemporaryAlert","post","housepost","user","headers","then","response","catch","error","status","duration","setTimeout","children","className","type","onClick","style","textDecoration","src","alt","width","height","marginLeft","color","fontWeight","alert"],"sources":["C:/Users/marko/Desktop/VS CODE/django-rest-api/frontend/src/components/HouseHearts.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport heartNotLiked from '../assets/househeart-not-liked.png';\r\nimport heartLiked from '../assets/househeart-liked.png';\r\nimport styles from '../styles/HouseHeart.module.css'; // Importing necessary assets and styles\r\n\r\nconst HouseHearts = ({ postId, currentHeartCount }) => {\r\n    // State variables to manage the like status, heart count, and alert messages\r\n    const [isLiked, setIsLiked] = useState(false);\r\n    const [heartsCount, setHeartsCount] = useState(currentHeartCount);\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n    const [alertType, setAlertType] = useState('');\r\n\r\n    // Retrieve user and authentication details from local storage and cookies\r\n    const loggedInUser = JSON.parse(localStorage.getItem('user'))?.username;\r\n    const token = localStorage.getItem('token');\r\n    const csrfToken = document.cookie.split('; ').find(row => row.startsWith('csrftoken='))?.split('=')[1];\r\n\r\n    // Function to handle the like button click, sends a POST request to the server\r\n    const handleLike = () => {\r\n        if (isLiked) {\r\n            setAlertMessage(\"You have either househearted your own post or househearted a post twice, which cannot be done.\");\r\n            setAlertType('error');\r\n            showTemporaryAlert(4000); // Display error message for 4 seconds\r\n            return;\r\n        }\r\n\r\n        axios.post('http://127.0.0.1:8000/househearts/', {\r\n            housepost: postId,\r\n            user: loggedInUser,\r\n        }, {\r\n            headers: {\r\n                'Authorization': `Token ${token}`,\r\n                'X-CSRFToken': csrfToken,\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(response => {\r\n            // Update state to reflect successful like and show success message\r\n            setIsLiked(true);\r\n            setHeartsCount(heartsCount + 1);\r\n            setAlertMessage(\"You have HouseHearted this post.\");\r\n            setAlertType('success');\r\n            showTemporaryAlert(3000); // Display success message for 3 seconds\r\n        })\r\n        .catch(error => {\r\n            // Handle different types of errors and display appropriate messages\r\n            if (error.response && error.response.status === 400) {\r\n                setAlertMessage(\"You have either househearted your own post or househearted a post twice, which cannot be done.\");\r\n                setAlertType('error');\r\n            } else if (error.response && error.response.status === 401) {\r\n                setAlertMessage(\"You are not authorized to like this post. Please log in.\");\r\n                setAlertType('error');\r\n            } else {\r\n                setAlertMessage('Error liking the post.');\r\n                setAlertType('error');\r\n            }\r\n            showTemporaryAlert(3000); // Display error message for 3 seconds\r\n        });\r\n    };\r\n\r\n    // Function to show alert messages temporarily\r\n    const showTemporaryAlert = (duration) => {\r\n        setTimeout(() => {\r\n            setAlertMessage('');\r\n        }, duration);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {/* Button to handle the like action */}\r\n            <button\r\n                className=\"btn btn-link p-0 d-flex align-items-center\"\r\n                type=\"button\"\r\n                onClick={handleLike}\r\n                style={{ textDecoration: 'none' }}\r\n            >\r\n                <img\r\n                    src={isLiked ? heartLiked : heartNotLiked}\r\n                    alt=\"Like Button\"\r\n                    style={{ width: '28.8px', height: '28.8px' }}\r\n                />\r\n                <span style={{ marginLeft: '5px', color: 'black', fontWeight: 'bold' }}>\r\n                    ({heartsCount})\r\n                </span>\r\n            </button>\r\n            {/* Conditionally rendering alert messages based on user interactions */}\r\n            {alertMessage && (\r\n                <div className={`${styles.alert} ${alertType === 'success' ? styles['alert-success'] : styles['alert-error']}`}>\r\n                    {alertMessage}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HouseHearts;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}