{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marko\\\\Desktop\\\\VS CODE\\\\django-rest-api\\\\frontend\\\\src\\\\pages\\\\Comments.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\nimport Form from 'react-bootstrap/Form';\nimport Alert from 'react-bootstrap/Alert';\nimport styles from '../styles/Home.module.css'; // Importing necessary libraries and styles\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Comments({\n  postId,\n  fetchCommentsForPost,\n  incrementCommentCount\n}) {\n  _s();\n  // State variables to manage the comment input, errors, loading state, and success message\n  const [comment, setComment] = useState('');\n  const [errors, setErrors] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [successMessage, setSuccessMessage] = useState('');\n\n  // Handle changes in the comment input field\n  const handleCommentChange = e => {\n    setComment(e.target.value);\n  };\n\n  // Handle the submission of the comment\n  const handleCommentSubmit = async event => {\n    event.preventDefault();\n\n    // Check if the comment is empty and set an error if it is\n    if (comment.trim() === '') {\n      setErrors('Comment cannot be empty');\n      return;\n    }\n    setLoading(true); // Indicate that the submission is in progress\n    setErrors(null); // Clear any previous errors\n\n    // Retrieve CSRF token and authentication token for the request\n    const csrfToken = Cookies.get('csrftoken');\n    const token = localStorage.getItem('token');\n\n    // If no token is found, display an error and stop the submission\n    if (!token) {\n      setErrors('Authentication token not found. Please log in.');\n      setLoading(false);\n      return;\n    }\n    try {\n      // Send the comment to the server\n      const response = await axios.post('http://127.0.0.1:8000/housepostcomments/', {\n        housepost: postId,\n        comment: comment.trim()\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': csrfToken,\n          Authorization: `Token ${token}`\n        },\n        withCredentials: true\n      });\n\n      // Reset the comment input, refetch comments, and increment the comment count on success\n      setComment('');\n      fetchCommentsForPost(postId);\n      incrementCommentCount();\n      setSuccessMessage('Comment added to housepost successfully.');\n\n      // Hide the success message after 3 seconds\n      setTimeout(() => {\n        setSuccessMessage('');\n      }, 3000);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      // Handle errors during the submission and display appropriate messages\n      console.error('Error submitting comment:', error);\n      const errorMsg = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || 'Failed to submit the comment. Please try again.';\n      setErrors(errorMsg);\n    } finally {\n      setLoading(false); // Reset the loading state\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: '100px',\n        right: '20px',\n        zIndex: 1000\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"success\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleCommentSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          className: \"form-control\",\n          placeholder: \"Add a comment...\",\n          \"aria-label\": \"Add a comment\",\n          value: comment,\n          onChange: handleCommentChange,\n          disabled: loading,\n          rows: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `btn ${styles.SubmitButton}`,\n          type: \"submit\",\n          disabled: loading || comment.trim() === '',\n          children: [loading ? 'Submitting...' : 'Comment', !loading && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"material-symbols-outlined\",\n            children: \"send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), errors && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-danger mt-2\",\n        children: errors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Comments, \"0g+1HzwSTjPzALt/uvpQnuNSj44=\");\n_c = Comments;\nexport default Comments; // Exporting the Comments component\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useState","axios","Cookies","Form","Alert","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","Comments","postId","fetchCommentsForPost","incrementCommentCount","_s","comment","setComment","errors","setErrors","loading","setLoading","successMessage","setSuccessMessage","handleCommentChange","e","target","value","handleCommentSubmit","event","preventDefault","trim","csrfToken","get","token","localStorage","getItem","response","post","housepost","headers","Authorization","withCredentials","setTimeout","error","_error$response","_error$response$data","console","errorMsg","data","detail","children","style","position","top","right","zIndex","variant","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","className","Control","as","placeholder","onChange","disabled","rows","SubmitButton","type","_c","$RefreshReg$"],"sources":["C:/Users/marko/Desktop/VS CODE/django-rest-api/frontend/src/pages/Comments.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport styles from '../styles/Home.module.css'; // Importing necessary libraries and styles\r\n\r\nfunction Comments({ postId, fetchCommentsForPost, incrementCommentCount }) {\r\n  // State variables to manage the comment input, errors, loading state, and success message\r\n  const [comment, setComment] = useState('');\r\n  const [errors, setErrors] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n\r\n  // Handle changes in the comment input field\r\n  const handleCommentChange = (e) => {\r\n    setComment(e.target.value);\r\n  };\r\n\r\n  // Handle the submission of the comment\r\n  const handleCommentSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // Check if the comment is empty and set an error if it is\r\n    if (comment.trim() === '') {\r\n      setErrors('Comment cannot be empty');\r\n      return;\r\n    }\r\n\r\n    setLoading(true); // Indicate that the submission is in progress\r\n    setErrors(null); // Clear any previous errors\r\n\r\n    // Retrieve CSRF token and authentication token for the request\r\n    const csrfToken = Cookies.get('csrftoken');\r\n    const token = localStorage.getItem('token');\r\n\r\n    // If no token is found, display an error and stop the submission\r\n    if (!token) {\r\n      setErrors('Authentication token not found. Please log in.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Send the comment to the server\r\n      const response = await axios.post('http://127.0.0.1:8000/housepostcomments/', {\r\n        housepost: postId,\r\n        comment: comment.trim(),\r\n      }, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-CSRFToken': csrfToken,\r\n          Authorization: `Token ${token}`,\r\n        },\r\n        withCredentials: true,\r\n      });\r\n\r\n      // Reset the comment input, refetch comments, and increment the comment count on success\r\n      setComment('');\r\n      fetchCommentsForPost(postId);\r\n      incrementCommentCount();\r\n      setSuccessMessage('Comment added to housepost successfully.');\r\n\r\n      // Hide the success message after 3 seconds\r\n      setTimeout(() => {\r\n        setSuccessMessage('');\r\n      }, 3000);\r\n\r\n    } catch (error) {\r\n      // Handle errors during the submission and display appropriate messages\r\n      console.error('Error submitting comment:', error);\r\n      const errorMsg = error.response?.data?.detail || 'Failed to submit the comment. Please try again.';\r\n      setErrors(errorMsg);\r\n    } finally {\r\n      setLoading(false); // Reset the loading state\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Display success message as an alert if available */}\r\n      {successMessage && (\r\n        <div style={{\r\n          position: 'fixed',\r\n          top: '100px',\r\n          right: '20px',\r\n          zIndex: 1000,\r\n        }}>\r\n          <Alert variant=\"success\">\r\n            {successMessage}\r\n          </Alert>\r\n        </div>\r\n      )}\r\n      {/* Form for submitting comments */}\r\n      <Form onSubmit={handleCommentSubmit}>\r\n        <div className=\"input-group mt-3\">\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            className=\"form-control\"\r\n            placeholder=\"Add a comment...\"\r\n            aria-label=\"Add a comment\"\r\n            value={comment}\r\n            onChange={handleCommentChange}\r\n            disabled={loading}\r\n            rows={2}\r\n          />\r\n          <button\r\n            className={`btn ${styles.SubmitButton}`}\r\n            type=\"submit\"\r\n            disabled={loading || comment.trim() === ''}\r\n          >\r\n            {loading ? 'Submitting...' : 'Comment'}\r\n            {!loading && <span className=\"material-symbols-outlined\">send</span>}\r\n          </button>\r\n        </div>\r\n        {/* Display error messages if any */}\r\n        {errors && (\r\n          <div className=\"text-danger mt-2\">\r\n            {errors}\r\n          </div>\r\n        )}\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Comments; // Exporting the Comments component\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}