{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marko\\\\Desktop\\\\VS CODE\\\\django-rest-api\\\\frontend\\\\src\\\\pages\\\\CommentDelete.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CommentDelete({\n  commentId,\n  commentUser,\n  loggedInUser,\n  fetchCommentsForPost\n}) {\n  _s();\n  const [showModal, setShowModal] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const handleDelete = async () => {\n    setLoading(true);\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('Authentication token not found. Please log in.');\n      setLoading(false);\n      return;\n    }\n    try {\n      const deleteUrl = `http://127.0.0.1:8000/housepostcomments/${commentId}/`;\n      await axios.delete(deleteUrl, {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      });\n      fetchCommentsForPost(); // Refresh comments after deletion\n      setShowModal(false); // Close the modal after successful deletion\n    } catch (error) {\n      console.error('Error deleting comment:', error);\n      alert('Failed to delete the comment. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Only render the delete button if the logged-in user matches the comment user\n  if (commentUser !== loggedInUser) {\n    return null; // Don't render the delete button\n  }\n\n  // Inline styles for the delete button\n  const deleteButtonStyle = {\n    float: 'right',\n    fontSize: '0.8rem',\n    padding: '0.25rem 0.5rem',\n    marginLeft: 'auto',\n    marginRight: '0'\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-danger btn-sm\",\n      style: deleteButtonStyle,\n      onClick: () => setShowModal(true),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: () => setShowModal(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Confirm Deletion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: \"Are you sure you want to delete your comment?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => setShowModal(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: handleDelete,\n          disabled: loading,\n          children: loading ? 'Deleting...' : 'Delete'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(CommentDelete, \"uLG0UpugcsSeHijU9qaylZ9u1IA=\");\n_c = CommentDelete;\nexport default CommentDelete;\nvar _c;\n$RefreshReg$(_c, \"CommentDelete\");","map":{"version":3,"names":["React","useState","axios","Modal","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","CommentDelete","commentId","commentUser","loggedInUser","fetchCommentsForPost","_s","showModal","setShowModal","loading","setLoading","handleDelete","token","localStorage","getItem","alert","deleteUrl","delete","headers","Authorization","error","console","deleteButtonStyle","float","fontSize","padding","marginLeft","marginRight","children","className","style","onClick","fileName","_jsxFileName","lineNumber","columnNumber","show","onHide","Header","closeButton","Title","Body","Footer","variant","disabled","_c","$RefreshReg$"],"sources":["C:/Users/marko/Desktop/VS CODE/django-rest-api/frontend/src/pages/CommentDelete.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nfunction CommentDelete({ commentId, commentUser, loggedInUser, fetchCommentsForPost }) {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleDelete = async () => {\r\n    setLoading(true);\r\n\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      alert('Authentication token not found. Please log in.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const deleteUrl = `http://127.0.0.1:8000/housepostcomments/${commentId}/`;\r\n      await axios.delete(deleteUrl, {\r\n        headers: {\r\n          Authorization: `Token ${token}`,\r\n        },\r\n      });\r\n\r\n      fetchCommentsForPost(); // Refresh comments after deletion\r\n      setShowModal(false); // Close the modal after successful deletion\r\n    } catch (error) {\r\n      console.error('Error deleting comment:', error);\r\n      alert('Failed to delete the comment. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Only render the delete button if the logged-in user matches the comment user\r\n  if (commentUser !== loggedInUser) {\r\n    return null; // Don't render the delete button\r\n  }\r\n\r\n  // Inline styles for the delete button\r\n  const deleteButtonStyle = {\r\n    float: 'right',\r\n    fontSize: '0.8rem',\r\n    padding: '0.25rem 0.5rem',\r\n    marginLeft: 'auto',\r\n    marginRight: '0',\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        className=\"btn btn-danger btn-sm\"\r\n        style={deleteButtonStyle}\r\n        onClick={() => setShowModal(true)}\r\n      >\r\n        Delete\r\n      </button>\r\n\r\n      <Modal show={showModal} onHide={() => setShowModal(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Confirm Deletion</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          Are you sure you want to delete your comment?\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"danger\" onClick={handleDelete} disabled={loading}>\r\n            {loading ? 'Deleting...' : 'Delete'}\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CommentDelete;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}