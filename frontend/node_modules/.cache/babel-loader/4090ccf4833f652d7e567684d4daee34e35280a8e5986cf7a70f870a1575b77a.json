{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marko\\\\Desktop\\\\VS CODE\\\\django-rest-api\\\\frontend\\\\src\\\\pages\\\\Notes.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, Form, Modal, Row, Col, Alert } from 'react-bootstrap';\nimport axios from 'axios';\nimport Cookies from 'js-cookie'; // For CSRF token\nimport styles from '../styles/Notes.module.css';\nimport loadingSpinner from '../assets/loading.gif';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Notes = () => {\n  _s();\n  const [notes, setNotes] = useState([]); // State for fetched notes\n  const [isLoading, setIsLoading] = useState(true); // Loading state\n  const [errors, setErrors] = useState(null); // State to hold errors\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [showMaxNotesModal, setShowMaxNotesModal] = useState(false); // Modal for max notes reached\n  const [currentNote, setCurrentNote] = useState(null);\n  const [newNote, setNewNote] = useState({\n    title: '',\n    content: '',\n    url: ''\n  });\n\n  // New state for editing notes in the modal\n  const [editNote, setEditNote] = useState({\n    title: '',\n    content: '',\n    url: ''\n  });\n  useEffect(() => {\n    const fetchNotes = async () => {\n      try {\n        const response = await axios.get('/notes/', {\n          headers: {\n            Authorization: `Token ${localStorage.getItem('token')}` // Auth token for logged-in user\n          }\n        });\n        setNotes(response.data.results); // Set notes to the 'results' array\n        setIsLoading(false); // Set loading to false after data is fetched\n      } catch (error) {\n        console.error('Error fetching notes:', error);\n        setErrors('Failed to load notes.');\n        setIsLoading(false); // Set loading to false in case of error\n      }\n    };\n    fetchNotes(); // Fetch notes on component mount\n  }, []);\n\n  // Handle changes in the note form (main form)\n  const handleNoteChange = event => {\n    setNewNote({\n      ...newNote,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  // Handle changes in the edit modal form\n  const handleEditNoteChange = event => {\n    setEditNote({\n      ...editNote,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  // Add a new note and push to backend\n  const addNote = async () => {\n    if (notes.length >= 2) {\n      setShowMaxNotesModal(true); // Show modal if the user already has 2 notes\n    } else {\n      try {\n        const csrfToken = Cookies.get('csrftoken'); // CSRF token from cookies\n\n        const response = await axios.post('/notes/', newNote, {\n          headers: {\n            Authorization: `Token ${localStorage.getItem('token')}`,\n            'X-CSRFToken': csrfToken // Include CSRF token\n          }\n        });\n\n        // Add the newly created note to the state\n        setNotes([...notes, response.data]);\n\n        // Reset the form fields\n        setNewNote({\n          title: '',\n          content: '',\n          url: ''\n        }); // Resetting content\n      } catch (error) {\n        console.error('Error adding note:', error);\n        setErrors('Failed to create a new note.');\n      }\n    }\n  };\n\n  // Open the edit modal and populate fields with the selected note\n  const handleEditNote = index => {\n    setCurrentNote(index);\n    setEditNote({\n      title: notes[index].title,\n      content: notes[index].content,\n      // Auto-populate with content\n      url: notes[index].url\n    });\n    setShowEditModal(true);\n  };\n\n  // Submit the edited note and push to backend\n  const submitEditNote = async () => {\n    // Check if currentNote is valid\n    if (currentNote === null || currentNote === undefined) {\n      console.error(\"No note selected for editing.\");\n      return; // Exit if no note is selected for editing\n    }\n\n    // Ensure there are actual changes before submitting\n    const originalNote = notes[currentNote];\n    if (editNote.title === originalNote.title && editNote.content === originalNote.content && editNote.url === originalNote.url) {\n      console.log(\"No changes detected, no need to submit.\");\n      setShowEditModal(false); // Just close the modal if no changes\n      return;\n    }\n    const updatedNotes = [...notes];\n    updatedNotes[currentNote] = editNote;\n    try {\n      const csrfToken = Cookies.get('csrftoken'); // CSRF token from cookies\n\n      // Make PATCH request to update the note\n      await axios.patch(`/notes/${notes[currentNote].id}/`, editNote, {\n        headers: {\n          Authorization: `Token ${localStorage.getItem('token')}`,\n          'X-CSRFToken': csrfToken // Include CSRF token\n        }\n      });\n      setNotes(updatedNotes); // Update notes state with new data\n      setShowEditModal(false); // Close the modal after success\n\n      // Clear the main form after saving changes\n      setNewNote({\n        title: '',\n        content: '',\n        url: ''\n      });\n    } catch (error) {\n      console.error('Error updating note:', error);\n      setErrors('Failed to update the note.');\n    }\n  };\n\n  // Open delete modal to confirm deletion\n  const handleDeleteNote = index => {\n    setCurrentNote(index);\n    setShowDeleteModal(true);\n  };\n\n  // Confirm the deletion of the selected note and push to backend\n  const confirmDeleteNote = async () => {\n    const noteToDelete = notes[currentNote];\n    try {\n      const csrfToken = Cookies.get('csrftoken'); // CSRF token from cookies\n      await axios.delete(`/notes/${noteToDelete.id}/`, {\n        headers: {\n          Authorization: `Token ${localStorage.getItem('token')}`,\n          'X-CSRFToken': csrfToken // Include CSRF token\n        }\n      });\n\n      // Remove the note from the state\n      setNotes(notes.filter((_, index) => index !== currentNote));\n      setShowDeleteModal(false);\n    } catch (error) {\n      console.error('Error deleting note:', error);\n      setErrors('Failed to delete the note.');\n    }\n  };\n\n  // Render loading spinner while fetching notes\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'rgba(255, 255, 255, 0.8)',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        zIndex: 9999\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: loadingSpinner,\n        alt: \"Loading...\",\n        style: {\n          width: '75px',\n          height: '75px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.notesContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Here you can create notes for yourself - maybe about future houseposts. You can create a maximum of two notes.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), errors && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 18\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.noteCreationBox,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            name: \"title\",\n            value: newNote.title,\n            onChange: handleNoteChange,\n            placeholder: \"Enter title\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            name: \"content\" // Change from description to content\n            ,\n            value: newNote.content // Change from description to content\n            ,\n            onChange: handleNoteChange,\n            placeholder: \"Write a description\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"URL (Optional)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"url\",\n            name: \"url\",\n            value: newNote.url,\n            onChange: handleNoteChange,\n            placeholder: \"Enter a URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"dark\",\n          onClick: addNote,\n          children: \"Create Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: styles.notesRow,\n      children: notes.map((note, index) => /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        className: styles.noteCol,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.noteCard,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.noteHeader,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"btn btn-danger btn-sm\",\n              onClick: () => handleDeleteNote(index),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `material-symbols-outlined ${styles.gearIcon}`,\n              onClick: () => handleEditNote(index),\n              children: \"settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: note.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: note.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this), \" \", note.url && /*#__PURE__*/_jsxDEV(\"a\", {\n            href: note.url,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: \"Visit Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showEditModal,\n      onHide: () => setShowEditModal(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Edit Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"title\",\n              value: editNote.title,\n              onChange: handleEditNoteChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              name: \"content\",\n              value: editNote.content,\n              onChange: handleEditNoteChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"URL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"url\",\n              name: \"url\",\n              value: editNote.url,\n              onChange: handleEditNoteChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => setShowEditModal(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: submitEditNote,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showDeleteModal,\n      onHide: () => setShowDeleteModal(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Confirm Deletion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: \"Are you sure you want to delete this note?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => setShowDeleteModal(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: confirmDeleteNote,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showMaxNotesModal,\n      onHide: () => setShowMaxNotesModal(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Note Limit Reached\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: \"You have reached the maximum limit of 2 notes. Please delete an existing note to create a new one.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => setShowMaxNotesModal(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n};\n_s(Notes, \"6Jc5dc+a9kQYhq/4Zz2W5Avd3T0=\");\n_c = Notes;\nexport default Notes;\nvar _c;\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"names":["React","useState","useEffect","Button","Form","Modal","Row","Col","Alert","axios","Cookies","styles","loadingSpinner","jsxDEV","_jsxDEV","Notes","_s","notes","setNotes","isLoading","setIsLoading","errors","setErrors","showEditModal","setShowEditModal","showDeleteModal","setShowDeleteModal","showMaxNotesModal","setShowMaxNotesModal","currentNote","setCurrentNote","newNote","setNewNote","title","content","url","editNote","setEditNote","fetchNotes","response","get","headers","Authorization","localStorage","getItem","data","results","error","console","handleNoteChange","event","target","name","value","handleEditNoteChange","addNote","length","csrfToken","post","handleEditNote","index","submitEditNote","undefined","originalNote","log","updatedNotes","patch","id","handleDeleteNote","confirmDeleteNote","noteToDelete","delete","filter","_","style","position","top","left","width","height","backgroundColor","display","justifyContent","alignItems","zIndex","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","className","notesContainer","variant","noteCreationBox","Group","Label","Control","type","onChange","placeholder","required","as","onClick","notesRow","map","note","md","noteCol","noteCard","noteHeader","gearIcon","href","rel","show","onHide","Header","closeButton","Title","Body","Footer","_c","$RefreshReg$"],"sources":["C:/Users/marko/Desktop/VS CODE/django-rest-api/frontend/src/pages/Notes.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Button, Form, Modal, Row, Col, Alert } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport Cookies from 'js-cookie'; // For CSRF token\r\nimport styles from '../styles/Notes.module.css';\r\nimport loadingSpinner from '../assets/loading.gif';\r\n\r\nconst Notes = () => {\r\n  const [notes, setNotes] = useState([]); // State for fetched notes\r\n  const [isLoading, setIsLoading] = useState(true); // Loading state\r\n  const [errors, setErrors] = useState(null); // State to hold errors\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n  const [showMaxNotesModal, setShowMaxNotesModal] = useState(false); // Modal for max notes reached\r\n  const [currentNote, setCurrentNote] = useState(null);\r\n  const [newNote, setNewNote] = useState({\r\n    title: '',\r\n    content: '',\r\n    url: ''\r\n  });\r\n\r\n  // New state for editing notes in the modal\r\n  const [editNote, setEditNote] = useState({\r\n    title: '',\r\n    content: '',\r\n    url: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchNotes = async () => {\r\n      try {\r\n        const response = await axios.get('/notes/', {\r\n          headers: {\r\n            Authorization: `Token ${localStorage.getItem('token')}`, // Auth token for logged-in user\r\n          },\r\n        });\r\n        setNotes(response.data.results); // Set notes to the 'results' array\r\n        setIsLoading(false); // Set loading to false after data is fetched\r\n      } catch (error) {\r\n        console.error('Error fetching notes:', error);\r\n        setErrors('Failed to load notes.');\r\n        setIsLoading(false); // Set loading to false in case of error\r\n      }\r\n    };\r\n\r\n    fetchNotes(); // Fetch notes on component mount\r\n  }, []);\r\n\r\n  // Handle changes in the note form (main form)\r\n  const handleNoteChange = (event) => {\r\n    setNewNote({\r\n      ...newNote,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  // Handle changes in the edit modal form\r\n  const handleEditNoteChange = (event) => {\r\n    setEditNote({\r\n      ...editNote,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  // Add a new note and push to backend\r\n  const addNote = async () => {\r\n    if (notes.length >= 2) {\r\n      setShowMaxNotesModal(true); // Show modal if the user already has 2 notes\r\n    } else {\r\n      try {\r\n        const csrfToken = Cookies.get('csrftoken'); // CSRF token from cookies\r\n\r\n        const response = await axios.post('/notes/', newNote, {\r\n          headers: {\r\n            Authorization: `Token ${localStorage.getItem('token')}`,\r\n            'X-CSRFToken': csrfToken, // Include CSRF token\r\n          },\r\n        });\r\n\r\n        // Add the newly created note to the state\r\n        setNotes([...notes, response.data]);\r\n\r\n        // Reset the form fields\r\n        setNewNote({ title: '', content: '', url: '' }); // Resetting content\r\n\r\n      } catch (error) {\r\n        console.error('Error adding note:', error);\r\n        setErrors('Failed to create a new note.');\r\n      }\r\n    }\r\n  };\r\n\r\n  // Open the edit modal and populate fields with the selected note\r\n  const handleEditNote = (index) => {\r\n    setCurrentNote(index);\r\n    setEditNote({\r\n      title: notes[index].title,\r\n      content: notes[index].content, // Auto-populate with content\r\n      url: notes[index].url\r\n    });\r\n    setShowEditModal(true);\r\n  };\r\n\r\n// Submit the edited note and push to backend\r\nconst submitEditNote = async () => {\r\n  // Check if currentNote is valid\r\n  if (currentNote === null || currentNote === undefined) {\r\n    console.error(\"No note selected for editing.\");\r\n    return; // Exit if no note is selected for editing\r\n  }\r\n\r\n  // Ensure there are actual changes before submitting\r\n  const originalNote = notes[currentNote];\r\n  if (\r\n    editNote.title === originalNote.title &&\r\n    editNote.content === originalNote.content &&\r\n    editNote.url === originalNote.url\r\n  ) {\r\n    console.log(\"No changes detected, no need to submit.\");\r\n    setShowEditModal(false); // Just close the modal if no changes\r\n    return;\r\n  }\r\n\r\n  const updatedNotes = [...notes];\r\n  updatedNotes[currentNote] = editNote;\r\n\r\n  try {\r\n    const csrfToken = Cookies.get('csrftoken'); // CSRF token from cookies\r\n\r\n    // Make PATCH request to update the note\r\n    await axios.patch(`/notes/${notes[currentNote].id}/`, editNote, {\r\n      headers: {\r\n        Authorization: `Token ${localStorage.getItem('token')}`,\r\n        'X-CSRFToken': csrfToken, // Include CSRF token\r\n      },\r\n    });\r\n\r\n    setNotes(updatedNotes);  // Update notes state with new data\r\n    setShowEditModal(false);  // Close the modal after success\r\n\r\n    // Clear the main form after saving changes\r\n    setNewNote({ title: '', content: '', url: '' });\r\n  } catch (error) {\r\n    console.error('Error updating note:', error);\r\n    setErrors('Failed to update the note.');\r\n  }\r\n};\r\n\r\n\r\n  // Open delete modal to confirm deletion\r\n  const handleDeleteNote = (index) => {\r\n    setCurrentNote(index);\r\n    setShowDeleteModal(true);\r\n  };\r\n\r\n  // Confirm the deletion of the selected note and push to backend\r\n  const confirmDeleteNote = async () => {\r\n    const noteToDelete = notes[currentNote];\r\n\r\n    try {\r\n      const csrfToken = Cookies.get('csrftoken'); // CSRF token from cookies\r\n      await axios.delete(`/notes/${noteToDelete.id}/`, {\r\n        headers: {\r\n          Authorization: `Token ${localStorage.getItem('token')}`,\r\n          'X-CSRFToken': csrfToken, // Include CSRF token\r\n        },\r\n      });\r\n\r\n      // Remove the note from the state\r\n      setNotes(notes.filter((_, index) => index !== currentNote));\r\n      setShowDeleteModal(false);\r\n    } catch (error) {\r\n      console.error('Error deleting note:', error);\r\n      setErrors('Failed to delete the note.');\r\n    }\r\n  };\r\n\r\n  // Render loading spinner while fetching notes\r\n  if (isLoading) {\r\n    return (\r\n      <div style={{\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        width: '100%',\r\n        height: '100%',\r\n        backgroundColor: 'rgba(255, 255, 255, 0.8)',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        zIndex: 9999,\r\n      }}>\r\n        <img src={loadingSpinner} alt=\"Loading...\" style={{ width: '75px', height: '75px' }} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={styles.notesContainer}>\r\n      {/* Notes creation section */}\r\n      <h2>Notes</h2>\r\n      <p>Here you can create notes for yourself - maybe about future houseposts. You can create a maximum of two notes.</p>\r\n\r\n      {errors && <Alert variant=\"danger\">{errors}</Alert>} {/* Display any errors */}\r\n\r\n      <div className={styles.noteCreationBox}>\r\n        <Form>\r\n          <Form.Group>\r\n            <Form.Label>Title</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"title\"\r\n              value={newNote.title}\r\n              onChange={handleNoteChange}\r\n              placeholder=\"Enter title\"\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Description</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              name=\"content\" // Change from description to content\r\n              value={newNote.content} // Change from description to content\r\n              onChange={handleNoteChange}\r\n              placeholder=\"Write a description\"\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>URL (Optional)</Form.Label>\r\n            <Form.Control\r\n              type=\"url\"\r\n              name=\"url\"\r\n              value={newNote.url}\r\n              onChange={handleNoteChange}\r\n              placeholder=\"Enter a URL\"\r\n            />\r\n          </Form.Group>\r\n          <Button variant=\"dark\" onClick={addNote}>Create Note</Button>\r\n        </Form>\r\n      </div>\r\n\r\n      {/* Display Notes */}\r\n      <Row className={styles.notesRow}>\r\n        {notes.map((note, index) => (\r\n          <Col md={6} key={index} className={styles.noteCol}>\r\n            <div className={styles.noteCard}>\r\n              <div className={styles.noteHeader}>\r\n                <span className=\"btn btn-danger btn-sm\" onClick={() => handleDeleteNote(index)}>Delete</span>\r\n                <span\r\n                  className={`material-symbols-outlined ${styles.gearIcon}`}\r\n                  onClick={() => handleEditNote(index)}\r\n                >\r\n                  settings\r\n                </span>\r\n              </div>\r\n              <h4>{note.title}</h4>\r\n              <p>{note.content}</p> {/* Change from description to content */}\r\n              {note.url && <a href={note.url} target=\"_blank\" rel=\"noopener noreferrer\">Visit Link</a>}\r\n            </div>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n\r\n      {/* Edit Modal */}\r\n      <Modal show={showEditModal} onHide={() => setShowEditModal(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Edit Note</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group>\r\n              <Form.Label>Title</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"title\"\r\n                value={editNote.title}\r\n                onChange={handleEditNoteChange}\r\n                required\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                name=\"content\"\r\n                value={editNote.content}\r\n                onChange={handleEditNoteChange}\r\n                required\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>URL</Form.Label>\r\n              <Form.Control\r\n                type=\"url\"\r\n                name=\"url\"\r\n                value={editNote.url}\r\n                onChange={handleEditNoteChange}\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShowEditModal(false)}>Cancel</Button>\r\n          <Button variant=\"primary\" onClick={submitEditNote}>Save Changes</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      {/* Delete Modal */}\r\n      <Modal show={showDeleteModal} onHide={() => setShowDeleteModal(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Confirm Deletion</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Are you sure you want to delete this note?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShowDeleteModal(false)}>Cancel</Button>\r\n          <Button variant=\"danger\" onClick={confirmDeleteNote}>Delete</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      {/* Max Notes Modal */}\r\n      <Modal show={showMaxNotesModal} onHide={() => setShowMaxNotesModal(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Note Limit Reached</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          You have reached the maximum limit of 2 notes. Please delete an existing note to create a new one.\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShowMaxNotesModal(false)}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notes;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,GAAG,EAAEC,GAAG,EAAEC,KAAK,QAAQ,iBAAiB;AACtE,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW,CAAC,CAAC;AACjC,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,cAAc,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAClD,MAAM,CAACoB,MAAM,EAAEC,SAAS,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACsB,aAAa,EAAEC,gBAAgB,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACwB,eAAe,EAAEC,kBAAkB,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAAC0B,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACnE,MAAM,CAAC4B,WAAW,EAAEC,cAAc,CAAC,GAAG7B,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAAC8B,OAAO,EAAEC,UAAU,CAAC,GAAG/B,QAAQ,CAAC;IACrCgC,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE,EAAE;IACXC,GAAG,EAAE;EACP,CAAC,CAAC;;EAEF;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGpC,QAAQ,CAAC;IACvCgC,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE,EAAE;IACXC,GAAG,EAAE;EACP,CAAC,CAAC;EAEFjC,SAAS,CAAC,MAAM;IACd,MAAMoC,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAM9B,KAAK,CAAC+B,GAAG,CAAC,SAAS,EAAE;UAC1CC,OAAO,EAAE;YACPC,aAAa,EAAE,SAASC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAE;UAC3D;QACF,CAAC,CAAC;QACF1B,QAAQ,CAACqB,QAAQ,CAACM,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC;QACjC1B,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;MACvB,CAAC,CAAC,OAAO2B,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7CzB,SAAS,CAAC,uBAAuB,CAAC;QAClCF,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;MACvB;IACF,CAAC;IAEDkB,UAAU,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMW,gBAAgB,GAAIC,KAAK,IAAK;IAClClB,UAAU,CAAC;MACT,GAAGD,OAAO;MACV,CAACmB,KAAK,CAACC,MAAM,CAACC,IAAI,GAAGF,KAAK,CAACC,MAAM,CAACE;IACpC,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMC,oBAAoB,GAAIJ,KAAK,IAAK;IACtCb,WAAW,CAAC;MACV,GAAGD,QAAQ;MACX,CAACc,KAAK,CAACC,MAAM,CAACC,IAAI,GAAGF,KAAK,CAACC,MAAM,CAACE;IACpC,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAME,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAItC,KAAK,CAACuC,MAAM,IAAI,CAAC,EAAE;MACrB5B,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC;IAC9B,CAAC,MAAM;MACL,IAAI;QACF,MAAM6B,SAAS,GAAG/C,OAAO,CAAC8B,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC;;QAE5C,MAAMD,QAAQ,GAAG,MAAM9B,KAAK,CAACiD,IAAI,CAAC,SAAS,EAAE3B,OAAO,EAAE;UACpDU,OAAO,EAAE;YACPC,aAAa,EAAE,SAASC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE;YACvD,aAAa,EAAEa,SAAS,CAAE;UAC5B;QACF,CAAC,CAAC;;QAEF;QACAvC,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEsB,QAAQ,CAACM,IAAI,CAAC,CAAC;;QAEnC;QACAb,UAAU,CAAC;UAAEC,KAAK,EAAE,EAAE;UAAEC,OAAO,EAAE,EAAE;UAAEC,GAAG,EAAE;QAAG,CAAC,CAAC,CAAC,CAAC;MAEnD,CAAC,CAAC,OAAOY,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;QAC1CzB,SAAS,CAAC,8BAA8B,CAAC;MAC3C;IACF;EACF,CAAC;;EAED;EACA,MAAMqC,cAAc,GAAIC,KAAK,IAAK;IAChC9B,cAAc,CAAC8B,KAAK,CAAC;IACrBvB,WAAW,CAAC;MACVJ,KAAK,EAAEhB,KAAK,CAAC2C,KAAK,CAAC,CAAC3B,KAAK;MACzBC,OAAO,EAAEjB,KAAK,CAAC2C,KAAK,CAAC,CAAC1B,OAAO;MAAE;MAC/BC,GAAG,EAAElB,KAAK,CAAC2C,KAAK,CAAC,CAACzB;IACpB,CAAC,CAAC;IACFX,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;;EAEH;EACA,MAAMqC,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC;IACA,IAAIhC,WAAW,KAAK,IAAI,IAAIA,WAAW,KAAKiC,SAAS,EAAE;MACrDd,OAAO,CAACD,KAAK,CAAC,+BAA+B,CAAC;MAC9C,OAAO,CAAC;IACV;;IAEA;IACA,MAAMgB,YAAY,GAAG9C,KAAK,CAACY,WAAW,CAAC;IACvC,IACEO,QAAQ,CAACH,KAAK,KAAK8B,YAAY,CAAC9B,KAAK,IACrCG,QAAQ,CAACF,OAAO,KAAK6B,YAAY,CAAC7B,OAAO,IACzCE,QAAQ,CAACD,GAAG,KAAK4B,YAAY,CAAC5B,GAAG,EACjC;MACAa,OAAO,CAACgB,GAAG,CAAC,yCAAyC,CAAC;MACtDxC,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC;MACzB;IACF;IAEA,MAAMyC,YAAY,GAAG,CAAC,GAAGhD,KAAK,CAAC;IAC/BgD,YAAY,CAACpC,WAAW,CAAC,GAAGO,QAAQ;IAEpC,IAAI;MACF,MAAMqB,SAAS,GAAG/C,OAAO,CAAC8B,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC;;MAE5C;MACA,MAAM/B,KAAK,CAACyD,KAAK,CAAC,UAAUjD,KAAK,CAACY,WAAW,CAAC,CAACsC,EAAE,GAAG,EAAE/B,QAAQ,EAAE;QAC9DK,OAAO,EAAE;UACPC,aAAa,EAAE,SAASC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE;UACvD,aAAa,EAAEa,SAAS,CAAE;QAC5B;MACF,CAAC,CAAC;MAEFvC,QAAQ,CAAC+C,YAAY,CAAC,CAAC,CAAE;MACzBzC,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAE;;MAE1B;MACAQ,UAAU,CAAC;QAAEC,KAAK,EAAE,EAAE;QAAEC,OAAO,EAAE,EAAE;QAAEC,GAAG,EAAE;MAAG,CAAC,CAAC;IACjD,CAAC,CAAC,OAAOY,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CzB,SAAS,CAAC,4BAA4B,CAAC;IACzC;EACF,CAAC;;EAGC;EACA,MAAM8C,gBAAgB,GAAIR,KAAK,IAAK;IAClC9B,cAAc,CAAC8B,KAAK,CAAC;IACrBlC,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;;EAED;EACA,MAAM2C,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,MAAMC,YAAY,GAAGrD,KAAK,CAACY,WAAW,CAAC;IAEvC,IAAI;MACF,MAAM4B,SAAS,GAAG/C,OAAO,CAAC8B,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC;MAC5C,MAAM/B,KAAK,CAAC8D,MAAM,CAAC,UAAUD,YAAY,CAACH,EAAE,GAAG,EAAE;QAC/C1B,OAAO,EAAE;UACPC,aAAa,EAAE,SAASC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE;UACvD,aAAa,EAAEa,SAAS,CAAE;QAC5B;MACF,CAAC,CAAC;;MAEF;MACAvC,QAAQ,CAACD,KAAK,CAACuD,MAAM,CAAC,CAACC,CAAC,EAAEb,KAAK,KAAKA,KAAK,KAAK/B,WAAW,CAAC,CAAC;MAC3DH,kBAAkB,CAAC,KAAK,CAAC;IAC3B,CAAC,CAAC,OAAOqB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CzB,SAAS,CAAC,4BAA4B,CAAC;IACzC;EACF,CAAC;;EAED;EACA,IAAIH,SAAS,EAAE;IACb,oBACEL,OAAA;MAAK4D,KAAK,EAAE;QACVC,QAAQ,EAAE,OAAO;QACjBC,GAAG,EAAE,CAAC;QACNC,IAAI,EAAE,CAAC;QACPC,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE,MAAM;QACdC,eAAe,EAAE,0BAA0B;QAC3CC,OAAO,EAAE,MAAM;QACfC,cAAc,EAAE,QAAQ;QACxBC,UAAU,EAAE,QAAQ;QACpBC,MAAM,EAAE;MACV,CAAE;MAAAC,QAAA,eACAvE,OAAA;QAAKwE,GAAG,EAAE1E,cAAe;QAAC2E,GAAG,EAAC,YAAY;QAACb,KAAK,EAAE;UAAEI,KAAK,EAAE,MAAM;UAAEC,MAAM,EAAE;QAAO;MAAE;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpF,CAAC;EAEV;EAEA,oBACE7E,OAAA;IAAK8E,SAAS,EAAEjF,MAAM,CAACkF,cAAe;IAAAR,QAAA,gBAEpCvE,OAAA;MAAAuE,QAAA,EAAI;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACd7E,OAAA;MAAAuE,QAAA,EAAG;IAA8G;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAEpHtE,MAAM,iBAAIP,OAAA,CAACN,KAAK;MAACsF,OAAO,EAAC,QAAQ;MAAAT,QAAA,EAAEhE;IAAM;MAAAmE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAAC,GAAC,eAErD7E,OAAA;MAAK8E,SAAS,EAAEjF,MAAM,CAACoF,eAAgB;MAAAV,QAAA,eACrCvE,OAAA,CAACV,IAAI;QAAAiF,QAAA,gBACHvE,OAAA,CAACV,IAAI,CAAC4F,KAAK;UAAAX,QAAA,gBACTvE,OAAA,CAACV,IAAI,CAAC6F,KAAK;YAAAZ,QAAA,EAAC;UAAK;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eAC9B7E,OAAA,CAACV,IAAI,CAAC8F,OAAO;YACXC,IAAI,EAAC,MAAM;YACX/C,IAAI,EAAC,OAAO;YACZC,KAAK,EAAEtB,OAAO,CAACE,KAAM;YACrBmE,QAAQ,EAAEnD,gBAAiB;YAC3BoD,WAAW,EAAC,aAAa;YACzBC,QAAQ;UAAA;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACQ,CAAC,eACb7E,OAAA,CAACV,IAAI,CAAC4F,KAAK;UAAAX,QAAA,gBACTvE,OAAA,CAACV,IAAI,CAAC6F,KAAK;YAAAZ,QAAA,EAAC;UAAW;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACpC7E,OAAA,CAACV,IAAI,CAAC8F,OAAO;YACXK,EAAE,EAAC,UAAU;YACbnD,IAAI,EAAC,SAAS,CAAC;YAAA;YACfC,KAAK,EAAEtB,OAAO,CAACG,OAAQ,CAAC;YAAA;YACxBkE,QAAQ,EAAEnD,gBAAiB;YAC3BoD,WAAW,EAAC,qBAAqB;YACjCC,QAAQ;UAAA;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACQ,CAAC,eACb7E,OAAA,CAACV,IAAI,CAAC4F,KAAK;UAAAX,QAAA,gBACTvE,OAAA,CAACV,IAAI,CAAC6F,KAAK;YAAAZ,QAAA,EAAC;UAAc;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACvC7E,OAAA,CAACV,IAAI,CAAC8F,OAAO;YACXC,IAAI,EAAC,KAAK;YACV/C,IAAI,EAAC,KAAK;YACVC,KAAK,EAAEtB,OAAO,CAACI,GAAI;YACnBiE,QAAQ,EAAEnD,gBAAiB;YAC3BoD,WAAW,EAAC;UAAa;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACQ,CAAC,eACb7E,OAAA,CAACX,MAAM;UAAC2F,OAAO,EAAC,MAAM;UAACU,OAAO,EAAEjD,OAAQ;UAAA8B,QAAA,EAAC;QAAW;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eAGN7E,OAAA,CAACR,GAAG;MAACsF,SAAS,EAAEjF,MAAM,CAAC8F,QAAS;MAAApB,QAAA,EAC7BpE,KAAK,CAACyF,GAAG,CAAC,CAACC,IAAI,EAAE/C,KAAK,kBACrB9C,OAAA,CAACP,GAAG;QAACqG,EAAE,EAAE,CAAE;QAAahB,SAAS,EAAEjF,MAAM,CAACkG,OAAQ;QAAAxB,QAAA,eAChDvE,OAAA;UAAK8E,SAAS,EAAEjF,MAAM,CAACmG,QAAS;UAAAzB,QAAA,gBAC9BvE,OAAA;YAAK8E,SAAS,EAAEjF,MAAM,CAACoG,UAAW;YAAA1B,QAAA,gBAChCvE,OAAA;cAAM8E,SAAS,EAAC,uBAAuB;cAACY,OAAO,EAAEA,CAAA,KAAMpC,gBAAgB,CAACR,KAAK,CAAE;cAAAyB,QAAA,EAAC;YAAM;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAC7F7E,OAAA;cACE8E,SAAS,EAAE,6BAA6BjF,MAAM,CAACqG,QAAQ,EAAG;cAC1DR,OAAO,EAAEA,CAAA,KAAM7C,cAAc,CAACC,KAAK,CAAE;cAAAyB,QAAA,EACtC;YAED;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC,eACN7E,OAAA;YAAAuE,QAAA,EAAKsB,IAAI,CAAC1E;UAAK;YAAAuD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACrB7E,OAAA;YAAAuE,QAAA,EAAIsB,IAAI,CAACzE;UAAO;YAAAsD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,KAAC,EACrBgB,IAAI,CAACxE,GAAG,iBAAIrB,OAAA;YAAGmG,IAAI,EAAEN,IAAI,CAACxE,GAAI;YAACgB,MAAM,EAAC,QAAQ;YAAC+D,GAAG,EAAC,qBAAqB;YAAA7B,QAAA,EAAC;UAAU;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrF;MAAC,GAdS/B,KAAK;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAejB,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAGN7E,OAAA,CAACT,KAAK;MAAC8G,IAAI,EAAE5F,aAAc;MAAC6F,MAAM,EAAEA,CAAA,KAAM5F,gBAAgB,CAAC,KAAK,CAAE;MAAA6D,QAAA,gBAChEvE,OAAA,CAACT,KAAK,CAACgH,MAAM;QAACC,WAAW;QAAAjC,QAAA,eACvBvE,OAAA,CAACT,KAAK,CAACkH,KAAK;UAAAlC,QAAA,EAAC;QAAS;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACf7E,OAAA,CAACT,KAAK,CAACmH,IAAI;QAAAnC,QAAA,eACTvE,OAAA,CAACV,IAAI;UAAAiF,QAAA,gBACHvE,OAAA,CAACV,IAAI,CAAC4F,KAAK;YAAAX,QAAA,gBACTvE,OAAA,CAACV,IAAI,CAAC6F,KAAK;cAAAZ,QAAA,EAAC;YAAK;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eAC9B7E,OAAA,CAACV,IAAI,CAAC8F,OAAO;cACXC,IAAI,EAAC,MAAM;cACX/C,IAAI,EAAC,OAAO;cACZC,KAAK,EAAEjB,QAAQ,CAACH,KAAM;cACtBmE,QAAQ,EAAE9C,oBAAqB;cAC/BgD,QAAQ;YAAA;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACQ,CAAC,eACb7E,OAAA,CAACV,IAAI,CAAC4F,KAAK;YAAAX,QAAA,gBACTvE,OAAA,CAACV,IAAI,CAAC6F,KAAK;cAAAZ,QAAA,EAAC;YAAW;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACpC7E,OAAA,CAACV,IAAI,CAAC8F,OAAO;cACXK,EAAE,EAAC,UAAU;cACbnD,IAAI,EAAC,SAAS;cACdC,KAAK,EAAEjB,QAAQ,CAACF,OAAQ;cACxBkE,QAAQ,EAAE9C,oBAAqB;cAC/BgD,QAAQ;YAAA;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACQ,CAAC,eACb7E,OAAA,CAACV,IAAI,CAAC4F,KAAK;YAAAX,QAAA,gBACTvE,OAAA,CAACV,IAAI,CAAC6F,KAAK;cAAAZ,QAAA,EAAC;YAAG;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eAC5B7E,OAAA,CAACV,IAAI,CAAC8F,OAAO;cACXC,IAAI,EAAC,KAAK;cACV/C,IAAI,EAAC,KAAK;cACVC,KAAK,EAAEjB,QAAQ,CAACD,GAAI;cACpBiE,QAAQ,EAAE9C;YAAqB;cAAAkC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACb7E,OAAA,CAACT,KAAK,CAACoH,MAAM;QAAApC,QAAA,gBACXvE,OAAA,CAACX,MAAM;UAAC2F,OAAO,EAAC,WAAW;UAACU,OAAO,EAAEA,CAAA,KAAMhF,gBAAgB,CAAC,KAAK,CAAE;UAAA6D,QAAA,EAAC;QAAM;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACnF7E,OAAA,CAACX,MAAM;UAAC2F,OAAO,EAAC,SAAS;UAACU,OAAO,EAAE3C,cAAe;UAAAwB,QAAA,EAAC;QAAY;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eAGR7E,OAAA,CAACT,KAAK;MAAC8G,IAAI,EAAE1F,eAAgB;MAAC2F,MAAM,EAAEA,CAAA,KAAM1F,kBAAkB,CAAC,KAAK,CAAE;MAAA2D,QAAA,gBACpEvE,OAAA,CAACT,KAAK,CAACgH,MAAM;QAACC,WAAW;QAAAjC,QAAA,eACvBvE,OAAA,CAACT,KAAK,CAACkH,KAAK;UAAAlC,QAAA,EAAC;QAAgB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC,eACf7E,OAAA,CAACT,KAAK,CAACmH,IAAI;QAAAnC,QAAA,EAAC;MAA0C;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACnE7E,OAAA,CAACT,KAAK,CAACoH,MAAM;QAAApC,QAAA,gBACXvE,OAAA,CAACX,MAAM;UAAC2F,OAAO,EAAC,WAAW;UAACU,OAAO,EAAEA,CAAA,KAAM9E,kBAAkB,CAAC,KAAK,CAAE;UAAA2D,QAAA,EAAC;QAAM;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACrF7E,OAAA,CAACX,MAAM;UAAC2F,OAAO,EAAC,QAAQ;UAACU,OAAO,EAAEnC,iBAAkB;UAAAgB,QAAA,EAAC;QAAM;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eAGR7E,OAAA,CAACT,KAAK;MAAC8G,IAAI,EAAExF,iBAAkB;MAACyF,MAAM,EAAEA,CAAA,KAAMxF,oBAAoB,CAAC,KAAK,CAAE;MAAAyD,QAAA,gBACxEvE,OAAA,CAACT,KAAK,CAACgH,MAAM;QAACC,WAAW;QAAAjC,QAAA,eACvBvE,OAAA,CAACT,KAAK,CAACkH,KAAK;UAAAlC,QAAA,EAAC;QAAkB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC,eACf7E,OAAA,CAACT,KAAK,CAACmH,IAAI;QAAAnC,QAAA,EAAC;MAEZ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACb7E,OAAA,CAACT,KAAK,CAACoH,MAAM;QAAApC,QAAA,eACXvE,OAAA,CAACX,MAAM;UAAC2F,OAAO,EAAC,WAAW;UAACU,OAAO,EAAEA,CAAA,KAAM5E,oBAAoB,CAAC,KAAK,CAAE;UAAAyD,QAAA,EAAC;QAAK;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1E,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAC3E,EAAA,CAxUID,KAAK;AAAA2G,EAAA,GAAL3G,KAAK;AA0UX,eAAeA,KAAK;AAAC,IAAA2G,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}