{"ast":null,"code":"import React,{useState}from'react';import axios from'axios';import Cookies from'js-cookie';import Form from'react-bootstrap/Form';import Alert from'react-bootstrap/Alert';import styles from'../styles/Home.module.css';// Importing necessary libraries and styles\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function Comments(_ref){let{postId,fetchCommentsForPost,incrementCommentCount}=_ref;// State variables to manage the comment input, errors, loading state, and success message\nconst[comment,setComment]=useState('');const[errors,setErrors]=useState(null);const[loading,setLoading]=useState(false);const[successMessage,setSuccessMessage]=useState('');// Handle changes in the comment input field\nconst handleCommentChange=e=>{setComment(e.target.value);};// Handle the submission of the comment\nconst handleCommentSubmit=async event=>{event.preventDefault();// Check if the comment is empty and set an error if it is\nif(comment.trim()===''){setErrors('Comment cannot be empty');return;}setLoading(true);// Indicate that the submission is in progress\nsetErrors(null);// Clear any previous errors\n// Retrieve CSRF token and authentication token for the request\nconst csrfToken=Cookies.get('csrftoken');const token=localStorage.getItem('token');// If no token is found, display an error and stop the submission\nif(!token){setErrors('Authentication token not found. Please log in.');setLoading(false);return;}try{// Send the comment to the server\nconst response=await axios.post('/housepostcomments/',{housepost:postId,comment:comment.trim()},{headers:{'Content-Type':'application/json','X-CSRFToken':csrfToken,Authorization:`Token ${token}`},withCredentials:true});// Reset the comment input, refetch comments, and increment the comment count on success\nsetComment('');fetchCommentsForPost(postId);incrementCommentCount();setSuccessMessage('Comment added to housepost successfully.');// Hide the success message after 3 seconds\nsetTimeout(()=>{setSuccessMessage('');},3000);}catch(error){var _error$response,_error$response$data;// Handle errors during the submission and display appropriate messages\nconsole.error('Error submitting comment:',error);const errorMsg=((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.detail)||'Failed to submit the comment. Please try again.';setErrors(errorMsg);}finally{setLoading(false);// Reset the loading state\n}};return/*#__PURE__*/_jsxs(_Fragment,{children:[successMessage&&/*#__PURE__*/_jsx(\"div\",{style:{position:'fixed',top:'100px',right:'20px',zIndex:1000},children:/*#__PURE__*/_jsx(Alert,{variant:\"success\",children:successMessage})}),/*#__PURE__*/_jsxs(Form,{onSubmit:handleCommentSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-group mt-3\",children:[/*#__PURE__*/_jsx(Form.Control,{as:\"textarea\",className:\"form-control\",placeholder:\"Add a comment...\",\"aria-label\":\"Add a comment\",value:comment,onChange:handleCommentChange,disabled:loading,rows:2}),/*#__PURE__*/_jsxs(\"button\",{className:`btn ${styles.SubmitButton}`,type:\"submit\",disabled:loading||comment.trim()==='',children:[loading?'Submitting...':'Comment',!loading&&/*#__PURE__*/_jsx(\"span\",{className:\"material-symbols-outlined\",children:\"send\"})]})]}),errors&&/*#__PURE__*/_jsx(\"div\",{className:\"text-danger mt-2\",children:errors})]})]});}export default Comments;// Exporting the Comments component","map":{"version":3,"names":["React","useState","axios","Cookies","Form","Alert","styles","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Comments","_ref","postId","fetchCommentsForPost","incrementCommentCount","comment","setComment","errors","setErrors","loading","setLoading","successMessage","setSuccessMessage","handleCommentChange","e","target","value","handleCommentSubmit","event","preventDefault","trim","csrfToken","get","token","localStorage","getItem","response","post","housepost","headers","Authorization","withCredentials","setTimeout","error","_error$response","_error$response$data","console","errorMsg","data","detail","children","style","position","top","right","zIndex","variant","onSubmit","className","Control","as","placeholder","onChange","disabled","rows","SubmitButton","type"],"sources":["C:/Users/marko/Desktop/VS CODE/django-rest-api/frontend/src/pages/Comments.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport styles from '../styles/Home.module.css'; // Importing necessary libraries and styles\r\n\r\nfunction Comments({ postId, fetchCommentsForPost, incrementCommentCount }) {\r\n  // State variables to manage the comment input, errors, loading state, and success message\r\n  const [comment, setComment] = useState('');\r\n  const [errors, setErrors] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n\r\n  // Handle changes in the comment input field\r\n  const handleCommentChange = (e) => {\r\n    setComment(e.target.value);\r\n  };\r\n\r\n  // Handle the submission of the comment\r\n  const handleCommentSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // Check if the comment is empty and set an error if it is\r\n    if (comment.trim() === '') {\r\n      setErrors('Comment cannot be empty');\r\n      return;\r\n    }\r\n\r\n    setLoading(true); // Indicate that the submission is in progress\r\n    setErrors(null); // Clear any previous errors\r\n\r\n    // Retrieve CSRF token and authentication token for the request\r\n    const csrfToken = Cookies.get('csrftoken');\r\n    const token = localStorage.getItem('token');\r\n\r\n    // If no token is found, display an error and stop the submission\r\n    if (!token) {\r\n      setErrors('Authentication token not found. Please log in.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Send the comment to the server\r\n      const response = await axios.post('/housepostcomments/', {\r\n        housepost: postId,\r\n        comment: comment.trim(),\r\n      }, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-CSRFToken': csrfToken,\r\n          Authorization: `Token ${token}`,\r\n        },\r\n        withCredentials: true,\r\n      });\r\n\r\n      // Reset the comment input, refetch comments, and increment the comment count on success\r\n      setComment('');\r\n      fetchCommentsForPost(postId);\r\n      incrementCommentCount();\r\n      setSuccessMessage('Comment added to housepost successfully.');\r\n\r\n      // Hide the success message after 3 seconds\r\n      setTimeout(() => {\r\n        setSuccessMessage('');\r\n      }, 3000);\r\n\r\n    } catch (error) {\r\n      // Handle errors during the submission and display appropriate messages\r\n      console.error('Error submitting comment:', error);\r\n      const errorMsg = error.response?.data?.detail || 'Failed to submit the comment. Please try again.';\r\n      setErrors(errorMsg);\r\n    } finally {\r\n      setLoading(false); // Reset the loading state\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Display success message as an alert if available */}\r\n      {successMessage && (\r\n        <div style={{\r\n          position: 'fixed',\r\n          top: '100px',\r\n          right: '20px',\r\n          zIndex: 1000,\r\n        }}>\r\n          <Alert variant=\"success\">\r\n            {successMessage}\r\n          </Alert>\r\n        </div>\r\n      )}\r\n      {/* Form for submitting comments */}\r\n      <Form onSubmit={handleCommentSubmit}>\r\n        <div className=\"input-group mt-3\">\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            className=\"form-control\"\r\n            placeholder=\"Add a comment...\"\r\n            aria-label=\"Add a comment\"\r\n            value={comment}\r\n            onChange={handleCommentChange}\r\n            disabled={loading}\r\n            rows={2}\r\n          />\r\n          <button\r\n            className={`btn ${styles.SubmitButton}`}\r\n            type=\"submit\"\r\n            disabled={loading || comment.trim() === ''}\r\n          >\r\n            {loading ? 'Submitting...' : 'Comment'}\r\n            {!loading && <span className=\"material-symbols-outlined\">send</span>}\r\n          </button>\r\n        </div>\r\n        {/* Display error messages if any */}\r\n        {errors && (\r\n          <div className=\"text-danger mt-2\">\r\n            {errors}\r\n          </div>\r\n        )}\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Comments; // Exporting the Comments component\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}