{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marko\\\\Desktop\\\\VS CODE\\\\django-rest-api\\\\frontend\\\\src\\\\pages\\\\Profile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Modal, Button, Alert, Row, Col } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport loadingSpinner from \"../assets/loading.gif\"; // Updated to use the smaller loading spinner\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Profile() {\n  _s();\n  const [userProfile, setUserProfile] = useState(null);\n  const [displayName, setDisplayName] = useState(\"\");\n  const [bio, setBio] = useState(\"\");\n  const [profilePicture, setProfilePicture] = useState(\"\");\n  const [tempProfilePicture, setTempProfilePicture] = useState(\"\"); // Temporary profile picture for the modal\n  const [isEditing, setIsEditing] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n  const [errors, setErrors] = useState({});\n  useEffect(() => {\n    const fetchUserProfile = async () => {\n      try {\n        const userResponse = await axios.get(\"/dj-rest-auth/user/\", {\n          headers: {\n            Authorization: `Token ${localStorage.getItem('token')}`\n          }\n        });\n        const userId = userResponse.data.pk;\n        const response = await axios.get(`/userprofiles/${userId}/`, {\n          headers: {\n            Authorization: `Token ${localStorage.getItem('token')}`\n          }\n        });\n        const data = response.data;\n        setUserProfile(data);\n        setDisplayName(data.display_name || \"No display name yet\");\n        setBio(data.bio || \"No bio has been given yet\");\n        const profileImg = data.profile_picture || \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png\";\n        setProfilePicture(profileImg);\n        setTempProfilePicture(profileImg); // Initialize the temp profile picture with the current one\n        setIsLoading(false);\n      } catch (error) {\n        console.error(\"Failed to fetch user profile:\", error);\n        setErrors({\n          non_field_errors: [\"Failed to load profile data.\"]\n        });\n        setIsLoading(false);\n      }\n    };\n    fetchUserProfile();\n  }, []);\n  const handleImageChange = event => {\n    const file = event.target.files[0];\n    if (file) {\n      setTempProfilePicture(URL.createObjectURL(file)); // Update only the temporary profile picture\n    }\n  };\n  const handleSaveProfile = async () => {\n    const updatedProfile = {\n      display_name: displayName === \"No display name yet\" ? \"\" : displayName,\n      bio: bio === \"No bio has been given yet\" ? \"\" : bio\n    };\n    setIsLoading(true);\n    try {\n      const formData = new FormData();\n      formData.append(\"display_name\", updatedProfile.display_name);\n      formData.append(\"bio\", updatedProfile.bio);\n      if (tempProfilePicture !== profilePicture) {\n        // Check if the profile picture has changed\n        formData.append(\"profile_picture\", tempProfilePicture);\n      }\n      await axios.patch(`/userprofiles/${userProfile.id}/`, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n          Authorization: `Token ${localStorage.getItem('token')}`\n        }\n      });\n      setProfilePicture(tempProfilePicture); // Only update the main profile picture after saving\n      setShowSuccessMessage(true);\n      setTimeout(() => setShowSuccessMessage(false), 3000); // Hide success message after 3 seconds\n      setIsEditing(false);\n    } catch (error) {\n      var _error$response;\n      console.error(\"Error updating profile:\", error);\n      setErrors(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || {\n        non_field_errors: [\"Failed to update profile.\"]\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleCancelEdit = () => {\n    setTempProfilePicture(profilePicture); // Reset the temporary profile picture on cancel\n    setIsEditing(false);\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'rgba(255, 255, 255, 0.8)',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        zIndex: 9999\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: loadingSpinner,\n        alt: \"Loading...\",\n        style: {\n          width: '75px',\n          height: '75px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: profileCardStyle,\n    children: [showSuccessMessage && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"success\",\n      style: successMessageStyle,\n      children: \"Profile saved successfully!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: profilePicture,\n      alt: \"Profile\",\n      style: profileImageStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: profileDetailsStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: profileNameStyle,\n        children: displayName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: profileBioStyle,\n        children: bio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"dark\",\n        onClick: () => setIsEditing(true),\n        children: \"Edit Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: isEditing,\n      onHide: handleCancelEdit,\n      size: \"lg\" // Make the modal larger\n      ,\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Edit Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"profilePicture\",\n                children: \"Profile Picture\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                id: \"profilePicture\",\n                accept: \"image/*\",\n                onChange: handleImageChange,\n                className: \"form-control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: tempProfilePicture,\n                alt: \"Profile Preview\",\n                className: \"mt-3 img-fluid rounded-circle\" // Make the image preview round\n                ,\n                style: {\n                  width: '150px',\n                  height: '150px',\n                  objectFit: 'cover'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 8,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"displayName\",\n                children: \"Display Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"displayName\",\n                className: \"form-control\",\n                value: displayName,\n                onChange: e => setDisplayName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"bio\",\n                children: \"Bio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                id: \"bio\",\n                className: \"form-control\",\n                value: bio,\n                onChange: e => setBio(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"dark\",\n          onClick: handleCancelEdit,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"dark\",\n          onClick: handleSaveProfile,\n          children: \"Save Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n\n// Inline CSS styles\n_s(Profile, \"rQhxqSekLKzNHJ45Qxb2Xo/tLb4=\");\n_c = Profile;\nconst profileCardStyle = {\n  // Add your existing styles for the profile card here if needed\n};\nconst profileImageStyle = {\n  // Add your existing styles for the profile image here if needed\n};\nconst profileDetailsStyle = {\n  // Add your existing styles for the profile details here if needed\n};\nconst profileNameStyle = {\n  // Add your existing styles for the profile name here if needed\n};\nconst profileBioStyle = {\n  // Add your existing styles for the profile bio here if needed\n};\nconst successMessageStyle = {\n  position: 'fixed',\n  top: '20px',\n  // Distance from the top of the page on larger screens\n  right: '20px',\n  // Distance from the right side of the page\n  zIndex: 1000,\n  width: '250px',\n  // Smaller width\n  textAlign: 'center',\n  padding: '10px',\n  // Smaller padding\n  paddingTop: '100px' // Padding from top\n};\nconst smallScreenSuccessMessageStyle = {\n  top: '0',\n  padding: '5px',\n  marginTop: '100px',\n  // Margin-top for small screens\n  right: '0',\n  width: '200px'\n};\n\n// Apply responsive styles\nif (window.innerWidth <= 576) {\n  Object.assign(successMessageStyle, smallScreenSuccessMessageStyle);\n}\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","Modal","Button","Alert","Row","Col","axios","Cookies","loadingSpinner","jsxDEV","_jsxDEV","Profile","_s","userProfile","setUserProfile","displayName","setDisplayName","bio","setBio","profilePicture","setProfilePicture","tempProfilePicture","setTempProfilePicture","isEditing","setIsEditing","isLoading","setIsLoading","showSuccessMessage","setShowSuccessMessage","errors","setErrors","fetchUserProfile","userResponse","get","headers","Authorization","localStorage","getItem","userId","data","pk","response","display_name","profileImg","profile_picture","error","console","non_field_errors","handleImageChange","event","file","target","files","URL","createObjectURL","handleSaveProfile","updatedProfile","formData","FormData","append","patch","id","setTimeout","_error$response","handleCancelEdit","style","position","top","left","width","height","backgroundColor","display","justifyContent","alignItems","zIndex","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","profileCardStyle","variant","successMessageStyle","profileImageStyle","profileDetailsStyle","profileNameStyle","profileBioStyle","onClick","show","onHide","size","centered","Header","closeButton","Title","Body","md","htmlFor","type","accept","onChange","className","objectFit","value","e","Footer","_c","right","textAlign","padding","paddingTop","smallScreenSuccessMessageStyle","marginTop","window","innerWidth","Object","assign","$RefreshReg$"],"sources":["C:/Users/marko/Desktop/VS CODE/django-rest-api/frontend/src/pages/Profile.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Modal, Button, Alert, Row, Col } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport loadingSpinner from \"../assets/loading.gif\"; // Updated to use the smaller loading spinner\r\n\r\nfunction Profile() {\r\n  const [userProfile, setUserProfile] = useState(null);\r\n  const [displayName, setDisplayName] = useState(\"\");\r\n  const [bio, setBio] = useState(\"\");\r\n  const [profilePicture, setProfilePicture] = useState(\"\");\r\n  const [tempProfilePicture, setTempProfilePicture] = useState(\"\"); // Temporary profile picture for the modal\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchUserProfile = async () => {\r\n      try {\r\n        const userResponse = await axios.get(\"/dj-rest-auth/user/\", {\r\n          headers: {\r\n            Authorization: `Token ${localStorage.getItem('token')}`,\r\n          },\r\n        });\r\n\r\n        const userId = userResponse.data.pk;\r\n\r\n        const response = await axios.get(`/userprofiles/${userId}/`, {\r\n          headers: {\r\n            Authorization: `Token ${localStorage.getItem('token')}`,\r\n          },\r\n        });\r\n\r\n        const data = response.data;\r\n        setUserProfile(data);\r\n        setDisplayName(data.display_name || \"No display name yet\");\r\n        setBio(data.bio || \"No bio has been given yet\");\r\n        const profileImg = data.profile_picture || \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png\";\r\n        setProfilePicture(profileImg);\r\n        setTempProfilePicture(profileImg); // Initialize the temp profile picture with the current one\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch user profile:\", error);\r\n        setErrors({ non_field_errors: [\"Failed to load profile data.\"] });\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchUserProfile();\r\n  }, []);\r\n\r\n  const handleImageChange = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      setTempProfilePicture(URL.createObjectURL(file)); // Update only the temporary profile picture\r\n    }\r\n  };\r\n\r\n  const handleSaveProfile = async () => {\r\n    const updatedProfile = {\r\n      display_name: displayName === \"No display name yet\" ? \"\" : displayName,\r\n      bio: bio === \"No bio has been given yet\" ? \"\" : bio,\r\n    };\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"display_name\", updatedProfile.display_name);\r\n      formData.append(\"bio\", updatedProfile.bio);\r\n      if (tempProfilePicture !== profilePicture) { // Check if the profile picture has changed\r\n        formData.append(\"profile_picture\", tempProfilePicture);\r\n      }\r\n\r\n      await axios.patch(`/userprofiles/${userProfile.id}/`, formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n          Authorization: `Token ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n\r\n      setProfilePicture(tempProfilePicture); // Only update the main profile picture after saving\r\n      setShowSuccessMessage(true);\r\n      setTimeout(() => setShowSuccessMessage(false), 3000); // Hide success message after 3 seconds\r\n      setIsEditing(false);\r\n    } catch (error) {\r\n      console.error(\"Error updating profile:\", error);\r\n      setErrors(error.response?.data || { non_field_errors: [\"Failed to update profile.\"] });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    setTempProfilePicture(profilePicture); // Reset the temporary profile picture on cancel\r\n    setIsEditing(false);\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div style={{\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        width: '100%',\r\n        height: '100%',\r\n        backgroundColor: 'rgba(255, 255, 255, 0.8)',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        zIndex: 9999,\r\n      }}>\r\n        <img src={loadingSpinner} alt=\"Loading...\" style={{ width: '75px', height: '75px' }} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={profileCardStyle}>\r\n      {showSuccessMessage && (\r\n        <Alert variant=\"success\" style={successMessageStyle}>\r\n          Profile saved successfully!\r\n        </Alert>\r\n      )}\r\n\r\n      <img\r\n        src={profilePicture}\r\n        alt=\"Profile\"\r\n        style={profileImageStyle}\r\n      />\r\n      <div style={profileDetailsStyle}>\r\n        <h1 style={profileNameStyle}>\r\n          {displayName}\r\n        </h1>\r\n        <p style={profileBioStyle}>\r\n          {bio}\r\n        </p>\r\n        <Button variant=\"dark\" onClick={() => setIsEditing(true)}>Edit Profile</Button>\r\n      </div>\r\n\r\n      {/* Modal for Editing Profile */}\r\n      <Modal\r\n        show={isEditing}\r\n        onHide={handleCancelEdit}\r\n        size=\"lg\" // Make the modal larger\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Edit Profile</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Row>\r\n            <Col md={4}>\r\n              <div>\r\n                <label htmlFor=\"profilePicture\">Profile Picture</label>\r\n                <input\r\n                  type=\"file\"\r\n                  id=\"profilePicture\"\r\n                  accept=\"image/*\"\r\n                  onChange={handleImageChange}\r\n                  className=\"form-control\"\r\n                />\r\n                <img\r\n                  src={tempProfilePicture}\r\n                  alt=\"Profile Preview\"\r\n                  className=\"mt-3 img-fluid rounded-circle\" // Make the image preview round\r\n                  style={{ width: '150px', height: '150px', objectFit: 'cover' }}\r\n                />\r\n              </div>\r\n            </Col>\r\n            <Col md={8}>\r\n              <div>\r\n                <label htmlFor=\"displayName\">Display Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"displayName\"\r\n                  className=\"form-control\"\r\n                  value={displayName}\r\n                  onChange={(e) => setDisplayName(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"mt-3\">\r\n                <label htmlFor=\"bio\">Bio</label>\r\n                <textarea\r\n                  id=\"bio\"\r\n                  className=\"form-control\"\r\n                  value={bio}\r\n                  onChange={(e) => setBio(e.target.value)}\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"dark\" onClick={handleCancelEdit}>Cancel</Button>\r\n          <Button variant=\"dark\" onClick={handleSaveProfile}>Save Profile</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Inline CSS styles\r\n\r\nconst profileCardStyle = {\r\n  // Add your existing styles for the profile card here if needed\r\n};\r\n\r\nconst profileImageStyle = {\r\n  // Add your existing styles for the profile image here if needed\r\n};\r\n\r\nconst profileDetailsStyle = {\r\n  // Add your existing styles for the profile details here if needed\r\n};\r\n\r\nconst profileNameStyle = {\r\n  // Add your existing styles for the profile name here if needed\r\n};\r\n\r\nconst profileBioStyle = {\r\n  // Add your existing styles for the profile bio here if needed\r\n};\r\n\r\nconst successMessageStyle = {\r\n  position: 'fixed',\r\n  top: '20px', // Distance from the top of the page on larger screens\r\n  right: '20px', // Distance from the right side of the page\r\n  zIndex: 1000,\r\n  width: '250px', // Smaller width\r\n  textAlign: 'center',\r\n  padding: '10px', // Smaller padding\r\n  paddingTop: '100px', // Padding from top\r\n};\r\n\r\nconst smallScreenSuccessMessageStyle = {\r\n  top: '0',\r\n  padding: '5px',\r\n  marginTop: '100px', // Margin-top for small screens\r\n  right: '0',\r\n  width: '200px',\r\n};\r\n\r\n// Apply responsive styles\r\nif (window.innerWidth <= 576) {\r\n  Object.assign(successMessageStyle, smallScreenSuccessMessageStyle);\r\n}\r\n\r\nexport default Profile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}