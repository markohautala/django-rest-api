{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marko\\\\Desktop\\\\VS CODE\\\\django-rest-api\\\\frontend\\\\src\\\\pages\\\\Notes.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, Form, Modal, Row, Col, Alert } from 'react-bootstrap';\nimport axios from 'axios';\nimport Cookies from 'js-cookie'; // For CSRF token\nimport styles from '../styles/Notes.module.css';\nimport loadingSpinner from '../assets/loading.gif'; // Your loading spinner\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Notes = () => {\n  _s();\n  const [notes, setNotes] = useState([]); // State for fetched notes\n  const [isLoading, setIsLoading] = useState(true); // Loading state\n  const [errors, setErrors] = useState(null); // State to hold errors\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [showMaxNotesModal, setShowMaxNotesModal] = useState(false); // Modal for max notes reached\n  const [currentNote, setCurrentNote] = useState(null);\n  const [newNote, setNewNote] = useState({\n    title: '',\n    content: '',\n    // Changed from description to content\n    url: ''\n  });\n  useEffect(() => {\n    const fetchNotes = async () => {\n      try {\n        const response = await axios.get('/notes/', {\n          headers: {\n            Authorization: `Token ${localStorage.getItem('token')}` // Auth token for logged-in user\n          }\n        });\n        setNotes(response.data.results); // Set notes to the 'results' array\n        setIsLoading(false); // Set loading to false after data is fetched\n      } catch (error) {\n        console.error('Error fetching notes:', error);\n        setErrors('Failed to load notes.');\n        setIsLoading(false); // Set loading to false in case of error\n      }\n    };\n    fetchNotes(); // Fetch notes on component mount\n  }, []);\n\n  // Handle changes in the note form\n  const handleNoteChange = event => {\n    setNewNote({\n      ...newNote,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  // Add a new note and push to backend\n  const addNote = async () => {\n    if (notes.length >= 2) {\n      setShowMaxNotesModal(true); // Show modal if the user already has 2 notes\n    } else {\n      try {\n        const csrfToken = Cookies.get('csrftoken'); // CSRF token from cookies\n\n        // Log the note being sent to the backend for debugging\n        console.log(\"Sending new note data: \", newNote);\n        const response = await axios.post('/notes/', newNote, {\n          headers: {\n            Authorization: `Token ${localStorage.getItem('token')}`,\n            'X-CSRFToken': csrfToken // Include CSRF token\n          }\n        });\n\n        // Log the response for debugging\n        console.log(\"Response from server: \", response.data);\n\n        // Add the newly created note to the state\n        setNotes([...notes, response.data]);\n\n        // Reset the form fields\n        setNewNote({\n          title: '',\n          content: '',\n          url: ''\n        }); // This resets the fields to be empty\n      } catch (error) {\n        console.error('Error adding note:', error);\n        setErrors('Failed to create a new note.');\n      }\n    }\n  };\n\n  // Open the edit modal and populate fields with the selected note\n  const handleEditNote = index => {\n    setCurrentNote(index);\n    setNewNote({\n      title: notes[index].title,\n      content: notes[index].content,\n      // Auto-populate with content\n      url: notes[index].url\n    });\n    setShowEditModal(true);\n  };\n\n  // Submit the edited note and push to backend\n  const submitEditNote = async () => {\n    const updatedNotes = [...notes];\n    updatedNotes[currentNote] = newNote;\n    try {\n      const csrfToken = Cookies.get('csrftoken'); // CSRF token from cookies\n      await axios.patch(`/notes/${notes[currentNote].id}/`, newNote, {\n        headers: {\n          Authorization: `Token ${localStorage.getItem('token')}`,\n          'X-CSRFToken': csrfToken // Include CSRF token\n        }\n      });\n      setNotes(updatedNotes);\n      setShowEditModal(false);\n    } catch (error) {\n      console.error('Error updating note:', error);\n      setErrors('Failed to update the note.');\n    }\n  };\n\n  // Open delete modal to confirm deletion\n  const handleDeleteNote = index => {\n    setCurrentNote(index);\n    setShowDeleteModal(true);\n  };\n\n  // Confirm the deletion of the selected note and push to backend\n  const confirmDeleteNote = async () => {\n    const noteToDelete = notes[currentNote];\n    try {\n      const csrfToken = Cookies.get('csrftoken'); // CSRF token from cookies\n      await axios.delete(`/notes/${noteToDelete.id}/`, {\n        headers: {\n          Authorization: `Token ${localStorage.getItem('token')}`,\n          'X-CSRFToken': csrfToken // Include CSRF token\n        }\n      });\n\n      // Remove the note from the state\n      setNotes(notes.filter((_, index) => index !== currentNote));\n      setShowDeleteModal(false);\n    } catch (error) {\n      console.error('Error deleting note:', error);\n      setErrors('Failed to delete the note.');\n    }\n  };\n\n  // Render loading spinner while fetching notes\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'rgba(255, 255, 255, 0.8)',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        zIndex: 9999\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: loadingSpinner,\n        alt: \"Loading...\",\n        style: {\n          width: '75px',\n          height: '75px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.notesContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Here you can create notes for yourself - maybe about future houseposts. You can create a maximum of two notes.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), errors && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 18\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.noteCreationBox,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            name: \"title\",\n            value: newNote.title,\n            onChange: handleNoteChange,\n            placeholder: \"Enter title\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            name: \"content\" // Change from description to content\n            ,\n            value: newNote.content // Change from description to content\n            ,\n            onChange: handleNoteChange,\n            placeholder: \"Write a description\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"URL (Optional)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"url\",\n            name: \"url\",\n            value: newNote.url,\n            onChange: handleNoteChange,\n            placeholder: \"Enter a URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"dark\",\n          onClick: addNote,\n          children: \"Create Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: styles.notesRow,\n      children: notes.map((note, index) => /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        className: styles.noteCol,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.noteCard,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.noteHeader,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"btn btn-danger btn-sm\",\n              onClick: () => handleDeleteNote(index),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `material-symbols-outlined ${styles.gearIcon}`,\n              onClick: () => handleEditNote(index),\n              children: \"settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: note.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: note.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this), \" \", note.url && /*#__PURE__*/_jsxDEV(\"a\", {\n            href: note.url,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: \"Visit Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showEditModal,\n      onHide: () => setShowEditModal(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: \"Edit Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"title\",\n              value: newNote.title,\n              onChange: handleNoteChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              name: \"content\" // Change from description to content\n              ,\n              value: newNote.content // Change from description to content\n              ,\n              onChange: handleNoteChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"URL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"url\",\n              name: \"url\",\n              value: newNote.url,\n              onChange: handleNoteChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"dark\",\n            className: styles.submitButton,\n            onClick: submitEditNote,\n            children: \"Submit Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showDeleteModal,\n      onHide: () => setShowDeleteModal(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: \"Confirm Deletion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: \"Are you sure you want to delete this note?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => setShowDeleteModal(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: confirmDeleteNote,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showMaxNotesModal,\n      onHide: () => setShowMaxNotesModal(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: \"Note Limit Reached\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: \"Sorry, you can only create up to 2 notes.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: () => setShowMaxNotesModal(false),\n          children: \"OK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n};\n_s(Notes, \"8etLYBHZ3FRvzwJDooQAk0KB/7E=\");\n_c = Notes;\nexport default Notes;\nvar _c;\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"names":["React","useState","useEffect","Button","Form","Modal","Row","Col","Alert","axios","Cookies","styles","loadingSpinner","jsxDEV","_jsxDEV","Notes","_s","notes","setNotes","isLoading","setIsLoading","errors","setErrors","showEditModal","setShowEditModal","showDeleteModal","setShowDeleteModal","showMaxNotesModal","setShowMaxNotesModal","currentNote","setCurrentNote","newNote","setNewNote","title","content","url","fetchNotes","response","get","headers","Authorization","localStorage","getItem","data","results","error","console","handleNoteChange","event","target","name","value","addNote","length","csrfToken","log","post","handleEditNote","index","submitEditNote","updatedNotes","patch","id","handleDeleteNote","confirmDeleteNote","noteToDelete","delete","filter","_","style","position","top","left","width","height","backgroundColor","display","justifyContent","alignItems","zIndex","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","className","notesContainer","variant","noteCreationBox","Group","Label","Control","type","onChange","placeholder","required","as","onClick","notesRow","map","note","md","noteCol","noteCard","noteHeader","gearIcon","href","rel","show","onHide","Header","closeButton","Body","submitButton","Footer","_c","$RefreshReg$"],"sources":["C:/Users/marko/Desktop/VS CODE/django-rest-api/frontend/src/pages/Notes.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Button, Form, Modal, Row, Col, Alert } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport Cookies from 'js-cookie'; // For CSRF token\r\nimport styles from '../styles/Notes.module.css';\r\nimport loadingSpinner from '../assets/loading.gif'; // Your loading spinner\r\n\r\nconst Notes = () => {\r\n  const [notes, setNotes] = useState([]); // State for fetched notes\r\n  const [isLoading, setIsLoading] = useState(true); // Loading state\r\n  const [errors, setErrors] = useState(null); // State to hold errors\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n  const [showMaxNotesModal, setShowMaxNotesModal] = useState(false); // Modal for max notes reached\r\n  const [currentNote, setCurrentNote] = useState(null);\r\n  const [newNote, setNewNote] = useState({\r\n    title: '',\r\n    content: '', // Changed from description to content\r\n    url: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchNotes = async () => {\r\n      try {\r\n        const response = await axios.get('/notes/', {\r\n          headers: {\r\n            Authorization: `Token ${localStorage.getItem('token')}`, // Auth token for logged-in user\r\n          },\r\n        });\r\n        setNotes(response.data.results); // Set notes to the 'results' array\r\n        setIsLoading(false); // Set loading to false after data is fetched\r\n      } catch (error) {\r\n        console.error('Error fetching notes:', error);\r\n        setErrors('Failed to load notes.');\r\n        setIsLoading(false); // Set loading to false in case of error\r\n      }\r\n    };\r\n\r\n    fetchNotes(); // Fetch notes on component mount\r\n  }, []);\r\n\r\n  // Handle changes in the note form\r\n  const handleNoteChange = (event) => {\r\n    setNewNote({\r\n      ...newNote,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  // Add a new note and push to backend\r\n  const addNote = async () => {\r\n    if (notes.length >= 2) {\r\n      setShowMaxNotesModal(true); // Show modal if the user already has 2 notes\r\n    } else {\r\n      try {\r\n        const csrfToken = Cookies.get('csrftoken'); // CSRF token from cookies\r\n\r\n        // Log the note being sent to the backend for debugging\r\n        console.log(\"Sending new note data: \", newNote);\r\n\r\n        const response = await axios.post('/notes/', newNote, {\r\n          headers: {\r\n            Authorization: `Token ${localStorage.getItem('token')}`,\r\n            'X-CSRFToken': csrfToken, // Include CSRF token\r\n          },\r\n        });\r\n\r\n        // Log the response for debugging\r\n        console.log(\"Response from server: \", response.data);\r\n\r\n        // Add the newly created note to the state\r\n        setNotes([...notes, response.data]);\r\n\r\n        // Reset the form fields\r\n        setNewNote({ title: '', content: '', url: '' }); // This resets the fields to be empty\r\n\r\n      } catch (error) {\r\n        console.error('Error adding note:', error);\r\n        setErrors('Failed to create a new note.');\r\n      }\r\n    }\r\n  };\r\n\r\n  // Open the edit modal and populate fields with the selected note\r\n  const handleEditNote = (index) => {\r\n    setCurrentNote(index);\r\n    setNewNote({\r\n      title: notes[index].title,\r\n      content: notes[index].content, // Auto-populate with content\r\n      url: notes[index].url\r\n    });\r\n    setShowEditModal(true);\r\n  };\r\n\r\n  // Submit the edited note and push to backend\r\n  const submitEditNote = async () => {\r\n    const updatedNotes = [...notes];\r\n    updatedNotes[currentNote] = newNote;\r\n\r\n    try {\r\n      const csrfToken = Cookies.get('csrftoken'); // CSRF token from cookies\r\n      await axios.patch(`/notes/${notes[currentNote].id}/`, newNote, {\r\n        headers: {\r\n          Authorization: `Token ${localStorage.getItem('token')}`,\r\n          'X-CSRFToken': csrfToken, // Include CSRF token\r\n        },\r\n      });\r\n\r\n      setNotes(updatedNotes);\r\n      setShowEditModal(false);\r\n    } catch (error) {\r\n      console.error('Error updating note:', error);\r\n      setErrors('Failed to update the note.');\r\n    }\r\n  };\r\n\r\n  // Open delete modal to confirm deletion\r\n  const handleDeleteNote = (index) => {\r\n    setCurrentNote(index);\r\n    setShowDeleteModal(true);\r\n  };\r\n\r\n  // Confirm the deletion of the selected note and push to backend\r\n  const confirmDeleteNote = async () => {\r\n    const noteToDelete = notes[currentNote];\r\n\r\n    try {\r\n      const csrfToken = Cookies.get('csrftoken'); // CSRF token from cookies\r\n      await axios.delete(`/notes/${noteToDelete.id}/`, {\r\n        headers: {\r\n          Authorization: `Token ${localStorage.getItem('token')}`,\r\n          'X-CSRFToken': csrfToken, // Include CSRF token\r\n        },\r\n      });\r\n\r\n      // Remove the note from the state\r\n      setNotes(notes.filter((_, index) => index !== currentNote));\r\n      setShowDeleteModal(false);\r\n    } catch (error) {\r\n      console.error('Error deleting note:', error);\r\n      setErrors('Failed to delete the note.');\r\n    }\r\n  };\r\n\r\n  // Render loading spinner while fetching notes\r\n  if (isLoading) {\r\n    return (\r\n      <div style={{\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        width: '100%',\r\n        height: '100%',\r\n        backgroundColor: 'rgba(255, 255, 255, 0.8)',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        zIndex: 9999,\r\n      }}>\r\n        <img src={loadingSpinner} alt=\"Loading...\" style={{ width: '75px', height: '75px' }} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={styles.notesContainer}>\r\n      {/* Notes creation section */}\r\n      <h2>Notes</h2>\r\n      <p>Here you can create notes for yourself - maybe about future houseposts. You can create a maximum of two notes.</p>\r\n\r\n      {errors && <Alert variant=\"danger\">{errors}</Alert>} {/* Display any errors */}\r\n\r\n      <div className={styles.noteCreationBox}>\r\n        <Form>\r\n          <Form.Group>\r\n            <Form.Label>Title</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"title\"\r\n              value={newNote.title}\r\n              onChange={handleNoteChange}\r\n              placeholder=\"Enter title\"\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Description</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              name=\"content\" // Change from description to content\r\n              value={newNote.content} // Change from description to content\r\n              onChange={handleNoteChange}\r\n              placeholder=\"Write a description\"\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>URL (Optional)</Form.Label>\r\n            <Form.Control\r\n              type=\"url\"\r\n              name=\"url\"\r\n              value={newNote.url}\r\n              onChange={handleNoteChange}\r\n              placeholder=\"Enter a URL\"\r\n            />\r\n          </Form.Group>\r\n          <Button variant=\"dark\" onClick={addNote}>Create Note</Button>\r\n        </Form>\r\n      </div>\r\n\r\n      {/* Display Notes */}\r\n      <Row className={styles.notesRow}>\r\n        {notes.map((note, index) => (\r\n          <Col md={6} key={index} className={styles.noteCol}>\r\n            <div className={styles.noteCard}>\r\n              <div className={styles.noteHeader}>\r\n                <span className=\"btn btn-danger btn-sm\" onClick={() => handleDeleteNote(index)}>Delete</span>\r\n                <span\r\n                  className={`material-symbols-outlined ${styles.gearIcon}`}\r\n                  onClick={() => handleEditNote(index)}\r\n                >\r\n                  settings\r\n                </span>\r\n              </div>\r\n              <h4>{note.title}</h4>\r\n              <p>{note.content}</p> {/* Change from description to content */}\r\n              {note.url && <a href={note.url} target=\"_blank\" rel=\"noopener noreferrer\">Visit Link</a>}\r\n            </div>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n\r\n      {/* Edit Modal */}\r\n      <Modal show={showEditModal} onHide={() => setShowEditModal(false)}>\r\n        <Modal.Header closeButton>Edit Note</Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group>\r\n              <Form.Label>Title</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"title\"\r\n                value={newNote.title}\r\n                onChange={handleNoteChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                name=\"content\" // Change from description to content\r\n                value={newNote.content} // Change from description to content\r\n                onChange={handleNoteChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>URL</Form.Label>\r\n              <Form.Control\r\n                type=\"url\"\r\n                name=\"url\"\r\n                value={newNote.url}\r\n                onChange={handleNoteChange}\r\n              />\r\n            </Form.Group>\r\n            <Button variant=\"dark\" className={styles.submitButton} onClick={submitEditNote}>Submit Changes</Button>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n      {/* Delete Confirmation Modal */}\r\n      <Modal show={showDeleteModal} onHide={() => setShowDeleteModal(false)}>\r\n        <Modal.Header closeButton>Confirm Deletion</Modal.Header>\r\n        <Modal.Body>Are you sure you want to delete this note?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShowDeleteModal(false)}>Cancel</Button>\r\n          <Button variant=\"danger\" onClick={confirmDeleteNote}>Delete</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      {/* Max Notes Reached Modal */}\r\n      <Modal show={showMaxNotesModal} onHide={() => setShowMaxNotesModal(false)}>\r\n        <Modal.Header closeButton>Note Limit Reached</Modal.Header>\r\n        <Modal.Body>Sorry, you can only create up to 2 notes.</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"primary\" onClick={() => setShowMaxNotesModal(false)}>OK</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notes;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}