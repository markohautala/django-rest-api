{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marko\\\\Desktop\\\\VS CODE\\\\django-rest-api\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport NavigationBar from './components/NavigationBar';\nimport Container from \"react-bootstrap/Container\";\nimport AppRoutes from './components/Routes';\nimport \"./api/axiosDefaults\";\nimport styles from './App.module.css';\nimport { useCurrentUser } from './context/CurrentUserContext';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const currentUser = useCurrentUser();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  useEffect(() => {\n    const fetchCSRFToken = async () => {\n      try {\n        await axios.get('/set-csrf/');\n        console.log('CSRF token should now be set.');\n      } catch (err) {\n        console.error('Failed to set CSRF token:', err);\n      }\n    };\n    fetchCSRFToken();\n    if (currentUser) {\n      setIsAuthenticated(true);\n    } else {\n      setIsAuthenticated(false);\n    }\n  }, [currentUser]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.App,\n    children: [/*#__PURE__*/_jsxDEV(NavigationBar, {\n      isAuthenticated: isAuthenticated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: styles.Main,\n      children: /*#__PURE__*/_jsxDEV(AppRoutes, {\n        isAuthenticated: isAuthenticated\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"EWNag1hzL/aCdjJ2PLcKpGBVHmg=\", false, function () {\n  return [useCurrentUser];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","NavigationBar","Container","AppRoutes","styles","useCurrentUser","axios","jsxDEV","_jsxDEV","App","_s","currentUser","isAuthenticated","setIsAuthenticated","fetchCSRFToken","get","console","log","err","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Main","_c","$RefreshReg$"],"sources":["C:/Users/marko/Desktop/VS CODE/django-rest-api/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport NavigationBar from './components/NavigationBar';\nimport Container from \"react-bootstrap/Container\";\nimport AppRoutes from './components/Routes';\nimport \"./api/axiosDefaults\";\nimport styles from './App.module.css';\nimport { useCurrentUser } from './context/CurrentUserContext';\nimport axios from 'axios';\n\nfunction App() {\n  const currentUser = useCurrentUser();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  useEffect(() => {\n    const fetchCSRFToken = async () => {\n      try {\n        await axios.get('/set-csrf/');\n        console.log('CSRF token should now be set.');\n      } catch (err) {\n        console.error('Failed to set CSRF token:', err);\n      }\n    };\n\n    fetchCSRFToken();\n\n    if (currentUser) {\n      setIsAuthenticated(true);\n    } else {\n      setIsAuthenticated(false);\n    }\n  }, [currentUser]);\n\n  return (\n    <div className={styles.App}>\n      <NavigationBar isAuthenticated={isAuthenticated} />\n      <Container className={styles.Main}>\n        <AppRoutes isAuthenticated={isAuthenticated} />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,SAAS,MAAM,qBAAqB;AAC3C,OAAO,qBAAqB;AAC5B,OAAOC,MAAM,MAAM,kBAAkB;AACrC,SAASC,cAAc,QAAQ,8BAA8B;AAC7D,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,WAAW,GAAGN,cAAc,CAAC,CAAC;EACpC,MAAM,CAACO,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE7DD,SAAS,CAAC,MAAM;IACd,MAAMe,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMR,KAAK,CAACS,GAAG,CAAC,YAAY,CAAC;QAC7BC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;MAC9C,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZF,OAAO,CAACG,KAAK,CAAC,2BAA2B,EAAED,GAAG,CAAC;MACjD;IACF,CAAC;IAEDJ,cAAc,CAAC,CAAC;IAEhB,IAAIH,WAAW,EAAE;MACfE,kBAAkB,CAAC,IAAI,CAAC;IAC1B,CAAC,MAAM;MACLA,kBAAkB,CAAC,KAAK,CAAC;IAC3B;EACF,CAAC,EAAE,CAACF,WAAW,CAAC,CAAC;EAEjB,oBACEH,OAAA;IAAKY,SAAS,EAAEhB,MAAM,CAACK,GAAI;IAAAY,QAAA,gBACzBb,OAAA,CAACP,aAAa;MAACW,eAAe,EAAEA;IAAgB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnDjB,OAAA,CAACN,SAAS;MAACkB,SAAS,EAAEhB,MAAM,CAACsB,IAAK;MAAAL,QAAA,eAChCb,OAAA,CAACL,SAAS;QAACS,eAAe,EAAEA;MAAgB;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV;AAACf,EAAA,CA/BQD,GAAG;EAAA,QACUJ,cAAc;AAAA;AAAAsB,EAAA,GAD3BlB,GAAG;AAiCZ,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}