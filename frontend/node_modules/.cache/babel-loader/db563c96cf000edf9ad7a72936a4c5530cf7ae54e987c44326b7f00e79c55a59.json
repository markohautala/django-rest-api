{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marko\\\\Desktop\\\\VS CODE\\\\django-rest-api\\\\frontend\\\\src\\\\pages\\\\Comments.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Cookies from 'js-cookie'; // Import js-cookie for CSRF token handling\nimport styles from '../styles/Home.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Comments({\n  postId,\n  fetchCommentsForPost\n}) {\n  _s();\n  const [comment, setComment] = useState('');\n  const [errors, setErrors] = useState(null);\n  const handleCommentChange = e => {\n    setComment(e.target.value);\n  };\n  const handleCommentSubmit = async () => {\n    if (comment.trim() === '') {\n      setErrors('Comment cannot be empty');\n      return;\n    }\n    if (!postId) {\n      setErrors('Post ID is invalid');\n      return;\n    }\n    const token = localStorage.getItem('token'); // Retrieve the auth token from localStorage\n    const csrfToken = Cookies.get('csrftoken'); // Get CSRF token from cookies\n\n    console.log('Auth token:', token);\n    console.log('CSRF token:', csrfToken);\n    if (!token) {\n      setErrors('Authentication token not found. Please log in.');\n      return;\n    }\n    const newComment = {\n      housepost: postId,\n      comment: comment\n    };\n    try {\n      const response = await axios.post('http://127.0.0.1:8000/housepostcomments/', newComment, {\n        headers: {\n          Authorization: `Token ${token}`,\n          // Include the auth token in the request headers\n          'X-CSRFToken': csrfToken // Include the CSRF token in the request headers\n        }\n      });\n      console.log('Comment submitted successfully:', response.data); // Log success\n\n      setComment(''); // Clear the comment input\n      fetchCommentsForPost(postId); // Refresh comments after adding a new one\n      setErrors(null); // Clear any previous errors\n    } catch (error) {\n      console.error('Error submitting comment:', error.response ? error.response.data : error.message);\n      setErrors('Failed to submit the comment. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-group mt-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Add a comment...\",\n      \"aria-label\": \"Add a comment\",\n      value: comment,\n      onChange: handleCommentChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `btn ${styles.SubmitButton}`,\n      type: \"button\",\n      onClick: handleCommentSubmit,\n      children: [\"Comment\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"material-symbols-outlined\",\n        children: \"send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), errors && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-danger mt-2\",\n      children: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 18\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(Comments, \"8fy2EVHWgQ7AdKQXtS19hC4/af8=\");\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useState","axios","Cookies","styles","jsxDEV","_jsxDEV","Comments","postId","fetchCommentsForPost","_s","comment","setComment","errors","setErrors","handleCommentChange","e","target","value","handleCommentSubmit","trim","token","localStorage","getItem","csrfToken","get","console","log","newComment","housepost","response","post","headers","Authorization","data","error","message","className","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","SubmitButton","onClick","_c","$RefreshReg$"],"sources":["C:/Users/marko/Desktop/VS CODE/django-rest-api/frontend/src/pages/Comments.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport Cookies from 'js-cookie'; // Import js-cookie for CSRF token handling\r\nimport styles from '../styles/Home.module.css';\r\n\r\nfunction Comments({ postId, fetchCommentsForPost }) {\r\n  const [comment, setComment] = useState('');\r\n  const [errors, setErrors] = useState(null);\r\n\r\n  const handleCommentChange = (e) => {\r\n    setComment(e.target.value);\r\n  };\r\n\r\n  const handleCommentSubmit = async () => {\r\n    if (comment.trim() === '') {\r\n      setErrors('Comment cannot be empty');\r\n      return;\r\n    }\r\n\r\n    if (!postId) {\r\n      setErrors('Post ID is invalid');\r\n      return;\r\n    }\r\n\r\n    const token = localStorage.getItem('token'); // Retrieve the auth token from localStorage\r\n    const csrfToken = Cookies.get('csrftoken'); // Get CSRF token from cookies\r\n\r\n    console.log('Auth token:', token);\r\n    console.log('CSRF token:', csrfToken);\r\n\r\n    if (!token) {\r\n      setErrors('Authentication token not found. Please log in.');\r\n      return;\r\n    }\r\n\r\n    const newComment = {\r\n      housepost: postId,\r\n      comment: comment,\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post('http://127.0.0.1:8000/housepostcomments/', newComment, {\r\n        headers: {\r\n          Authorization: `Token ${token}`, // Include the auth token in the request headers\r\n          'X-CSRFToken': csrfToken, // Include the CSRF token in the request headers\r\n        },\r\n      });\r\n\r\n      console.log('Comment submitted successfully:', response.data); // Log success\r\n\r\n      setComment(''); // Clear the comment input\r\n      fetchCommentsForPost(postId); // Refresh comments after adding a new one\r\n      setErrors(null); // Clear any previous errors\r\n    } catch (error) {\r\n      console.error('Error submitting comment:', error.response ? error.response.data : error.message);\r\n      setErrors('Failed to submit the comment. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"input-group mt-3\">\r\n      <input\r\n        type=\"text\"\r\n        className=\"form-control\"\r\n        placeholder=\"Add a comment...\"\r\n        aria-label=\"Add a comment\"\r\n        value={comment}\r\n        onChange={handleCommentChange}\r\n      />\r\n      <button className={`btn ${styles.SubmitButton}`} type=\"button\" onClick={handleCommentSubmit}>\r\n        Comment\r\n        <span className=\"material-symbols-outlined\">send</span>\r\n      </button>\r\n      {errors && <div className=\"text-danger mt-2\">{errors}</div>} {/* Display errors */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Comments;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}